WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: cfaefbf3-a04d-4ec9-bca8-4e54f68404ee
Created: 2025-05-15T20:22:49.701Z
Duration: 5513.77
Channels: 1

00:00:00.560 --> 00:00:05.120
Okay. Alright. So today we'll be doing workshop

00:00:05.120 --> 00:00:08.640
two, and so we're building up we're building

00:00:08.640 --> 00:00:15.235
on our okay. We're building on workshop one

00:00:15.235 --> 00:00:18.755
where we built this profile page. And now

00:00:18.755 --> 00:00:20.915
we're going to build a feed page where

00:00:20.915 --> 00:00:23.795
we can sort of have our Facebook like

00:00:23.795 --> 00:00:28.520
posts and comments and things like that. So

00:00:28.520 --> 00:00:30.200
we'll be using all the stuff that Andy

00:00:30.200 --> 00:00:35.800
talked about in the last Hooks lecture. So

00:00:35.880 --> 00:00:37.320
we're going build the front end where we

00:00:37.320 --> 00:00:41.785
have posts and also comments, and we'll add

00:00:41.785 --> 00:00:44.825
on the back end tomorrow. And this is

00:00:44.825 --> 00:00:48.665
sort of what we're going for today. To

00:00:48.665 --> 00:00:51.145
get started, it's the normal steps for our

00:00:51.145 --> 00:00:55.970
workshops. Reset hard, check out wt starter, and

00:00:55.970 --> 00:00:58.690
then you can always use the questions doc

00:00:58.690 --> 00:01:00.370
or the queue when you need help throughout

00:01:00.370 --> 00:01:49.240
the workshop. This is what our component hierarchy

00:01:49.400 --> 00:01:52.840
our component tree looks like from workshop one.

00:01:52.840 --> 00:01:54.440
So we have the app, we have our

00:01:54.440 --> 00:01:55.960
profile in alpha bar, and then we just

00:01:55.960 --> 00:01:59.000
had the little clicker item. But now we

00:01:59.000 --> 00:02:00.280
want to make it a little bit more

00:02:00.280 --> 00:02:03.825
complicated, have our whole feed where we have

00:02:04.225 --> 00:02:08.305
posts and then comments within those posts. Again,

00:02:08.305 --> 00:02:09.585
this is what we want to go for.

00:02:11.505 --> 00:02:13.345
So we want to create the feed page.

00:02:13.345 --> 00:02:15.265
We'll do some routing so that we can

00:02:15.265 --> 00:02:17.265
get between the profile page and the feed

00:02:17.265 --> 00:02:22.440
page. And then, yeah, let's just get started

00:02:22.440 --> 00:02:28.200
and npm run dev to view your cat

00:02:28.200 --> 00:02:39.355
book. Mine is on localhost 500174 because I

00:02:39.355 --> 00:02:41.195
think there's something else on the port. But

00:02:41.195 --> 00:02:43.275
yours should be on 500173 if you have

00:02:43.275 --> 00:02:55.030
nothing else running. Okay. So to start, we'll

00:02:55.030 --> 00:02:58.070
do a quick warm up. Commands to get

00:02:58.070 --> 00:02:59.750
caught up are always in the top right.

00:03:01.590 --> 00:03:03.125
And throughout this workshop, we're going to have

00:03:03.125 --> 00:03:04.805
a bunch of steps. And you can always

00:03:04.805 --> 00:03:07.045
use the little search bar on the left

00:03:07.045 --> 00:03:10.165
or command shift f, and then you can

00:03:10.165 --> 00:03:12.885
search step zero or step one or step

00:03:12.885 --> 00:03:16.620
two, etcetera, to find the steps you're looking

00:03:16.620 --> 00:03:18.780
for. So our warm up will be step

00:03:18.780 --> 00:03:22.860
zero, and we want to import feed. Js

00:03:22.860 --> 00:03:25.580
instead of profile to get something that looks

00:03:25.580 --> 00:03:27.980
like this. And you can have a couple

00:03:27.980 --> 00:07:03.515
minutes to do that. Okay. So I'll go

00:07:03.515 --> 00:07:05.835
over how to do this one now. So

00:07:05.995 --> 00:07:09.595
first thing we want to look is we

00:07:09.595 --> 00:07:10.795
kind of want to see where feed is

00:07:10.795 --> 00:07:12.795
with respect to where you want to import

00:07:12.795 --> 00:07:16.395
it into. And if we look in our

00:07:16.475 --> 00:07:19.430
sidebar here, we're working in app. Jsx, but

00:07:19.430 --> 00:07:21.510
feed is within pages. So if you want

00:07:21.510 --> 00:07:23.510
to import it, we can do the same

00:07:23.510 --> 00:07:26.150
thing as we see a profile being imported.

00:07:29.350 --> 00:07:35.205
And we just import feed. And you can

00:07:35.205 --> 00:07:40.405
see that the feed file exports feed here,

00:07:40.405 --> 00:07:44.085
export default feed. And so to render it,

00:07:49.800 --> 00:07:51.720
We just do the same thing as profile.

00:07:51.720 --> 00:07:56.120
We do the fake HTML component with self

00:07:56.360 --> 00:07:58.680
closing tag. And now we can comment out

00:07:58.680 --> 00:08:04.535
profile for now. And then if we go

00:08:04.535 --> 00:08:06.695
over the profile page, we see what we

00:08:06.695 --> 00:08:08.215
want. It just says this is a feed,

00:08:08.215 --> 00:08:10.135
but it doesn't have anything yet because we

00:08:10.135 --> 00:08:15.150
haven't filled it in. Okay. So now let's

00:08:15.150 --> 00:08:18.030
get started with step one, which is just

00:08:18.030 --> 00:08:22.190
rendering a single story component. And reset hard

00:08:22.190 --> 00:08:24.750
and check out step one to get started.

00:08:36.945 --> 00:08:40.625
So step two is going to be another

00:08:40.785 --> 00:08:42.625
or this should say step one. Step one

00:08:42.625 --> 00:08:46.250
is going be another exercise. So in feed.

00:08:46.250 --> 00:08:49.050
Js we want to render a single story

00:08:49.050 --> 00:08:55.850
component. So right now we have nothing in

00:08:55.850 --> 00:08:57.770
feed. Js, we just have a div with

00:08:57.770 --> 00:09:00.570
some filler text. And if we look inside

00:09:01.235 --> 00:09:04.835
modules, we have a file called single story.

00:09:08.515 --> 00:09:10.915
And single story is also not filled in

00:09:10.915 --> 00:09:13.395
yet. It just has some filler text. But

00:09:13.395 --> 00:09:17.420
we want to fill it in with something

00:09:17.420 --> 00:09:23.580
to get something that oh, wait, this slide

00:09:23.580 --> 00:09:36.075
is out of order. Oh wait, no it's

00:09:36.075 --> 00:09:48.060
fine. All right. So yeah, we want something

00:09:48.460 --> 00:09:52.060
that looks like this. Ignore the stuff at

00:09:52.060 --> 00:09:54.300
the bottom there. But yeah, we just want

00:09:54.300 --> 00:09:56.860
a name which is in bold and then

00:09:56.860 --> 00:09:59.365
some content rendered here. And if we look

00:09:59.365 --> 00:10:04.005
inside our single story, we have a docstring

00:10:04.005 --> 00:10:06.005
here which tells us which props are being

00:10:06.005 --> 00:10:08.965
passed into single story. So we have IDs,

00:10:08.965 --> 00:10:10.910
your name and content. We want to use

00:10:10.910 --> 00:10:14.910
these props to render something that looks like

00:10:15.550 --> 00:10:18.350
the picture on the slide. And you can

00:10:18.350 --> 00:10:21.870
also look inside card. Css for appropriate CSS

00:10:21.870 --> 00:10:57.635
files to try to create the component. And

00:10:57.635 --> 00:10:59.395
we're also on step one even though the

00:10:59.395 --> 00:15:21.190
slides say step two. So for this one,

00:15:21.190 --> 00:15:25.910
we can start by just rendering in a

00:15:25.910 --> 00:15:32.685
single story after we import it. So single

00:15:32.685 --> 00:15:35.885
story. And your editor should usually fill in

00:15:35.885 --> 00:15:38.285
the import line. And then we do the

00:15:38.285 --> 00:15:44.460
same thing as before. And then just put

00:15:44.460 --> 00:15:48.060
in single story. So if we do that

00:15:48.060 --> 00:16:04.385
for now, for now, we just get that

00:16:04.385 --> 00:16:09.985
this is a single story text. And now

00:16:09.985 --> 00:16:12.865
we want to actually fill it in with

00:16:12.280 --> 00:16:16.520
props. So we want to display the creator

00:16:16.520 --> 00:16:20.200
name and content. We already have the CSS

00:16:20.200 --> 00:16:23.480
card story filled in. And then to fill

00:16:23.480 --> 00:16:30.375
in the first heading, could do I mean,

00:16:30.375 --> 00:16:31.655
doesn't really matter, but we could just do

00:16:31.655 --> 00:16:38.855
h1. And then class name and set it

00:16:38.855 --> 00:16:44.340
to ubold. Actually, let me open up card

00:16:44.340 --> 00:17:02.045
CSS. Ubold. And then put in the creator

00:17:02.045 --> 00:17:12.240
name by using props. And then we can

00:17:12.240 --> 00:17:17.920
add the actual content. And we can use

00:17:17.920 --> 00:17:33.005
the Card Story content. And now we want

00:17:33.005 --> 00:17:36.285
to actually use the props, so we fill

00:17:36.285 --> 00:17:38.450
that in with the attributes from where single

00:17:38.450 --> 00:17:43.170
story is called. So you can set them

00:17:43.170 --> 00:17:50.995
in here. Then something. And then right now,

00:17:50.995 --> 00:17:54.355
we don't actually do anything with the IDs

00:17:54.355 --> 00:17:56.035
yet, but we can just pass in some

00:17:56.035 --> 00:18:02.820
dummy value. And yeah. So then we get

00:18:02.820 --> 00:18:05.460
the heading and then the content passed in

00:18:05.460 --> 00:18:13.300
through the prop. That's step one. You can

00:18:13.300 --> 00:18:16.740
check out W2 Step two to get the

00:18:16.740 --> 00:18:25.075
result and catch up. So step two, we're

00:18:25.075 --> 00:18:27.715
going to create a story state to maintain

00:18:28.035 --> 00:18:31.910
the stories within our feed. And this will

00:18:31.910 --> 00:18:36.470
just be a follow along. Right now we're

00:18:36.470 --> 00:18:38.150
just going to be hard coding our list

00:18:38.150 --> 00:18:41.590
of stories. So tomorrow in our next workshop

00:18:41.590 --> 00:18:43.925
we'll be working on having some sort of

00:18:43.925 --> 00:18:45.845
backend that serves our stories. But for right

00:18:45.845 --> 00:18:48.405
now we're just working on the front end

00:18:48.405 --> 00:18:50.645
and hard coding some stories within our state.

00:18:51.045 --> 00:18:53.445
And since we want to render a bunch

00:18:53.445 --> 00:18:55.125
of stories within our feed, we want to

00:18:55.125 --> 00:18:58.480
hold this story state within we want to

00:18:58.480 --> 00:19:00.480
hold this story state within feed because that

00:19:00.480 --> 00:19:03.040
holds which stories should be rendered. So to

00:19:03.040 --> 00:19:06.880
start, can just use the normal commands to

00:19:06.880 --> 00:19:09.360
write down to create a new state. So

00:19:09.360 --> 00:19:12.160
we can create a state called stories with

00:19:12.160 --> 00:19:15.015
its setter, set stories, and then use a

00:19:15.015 --> 00:19:20.375
useState hook. And initially, there we can just

00:19:20.375 --> 00:19:21.895
set the default value to be an empty

00:19:21.895 --> 00:19:24.695
list, and then we'll fill in this empty

00:19:24.695 --> 00:19:28.590
list later. When we fill in this empty

00:19:28.590 --> 00:19:31.470
list is in here inside of the useEffect.

00:19:32.670 --> 00:19:35.150
Inside of the useEffect we to we can

00:19:35.150 --> 00:19:37.550
just hard code some states on render because

00:19:37.550 --> 00:19:41.245
it's an empty bracket. So we can just

00:19:41.245 --> 00:19:47.725
create some stories. And you can see that

00:19:47.725 --> 00:19:49.005
the format has to be here. We just

00:19:49.005 --> 00:19:50.845
have to have three values, which are the

00:19:50.845 --> 00:19:54.710
ID, creator name, and content. So We can

00:19:54.710 --> 00:20:01.590
just create a set random IDs, creator name,

00:20:01.910 --> 00:20:17.755
person one, and then content one. And then

00:20:18.955 --> 00:20:22.030
I'll just create a list of them because

00:20:22.430 --> 00:20:24.910
in the future we'll to have we'll want

00:20:24.910 --> 00:20:26.510
to be able to list render a list

00:20:26.510 --> 00:20:29.630
of different stories. So I'll create more than

00:20:29.630 --> 00:20:37.745
one. And then to actually set the state,

00:20:37.745 --> 00:20:41.345
use the setStories function, which is created by

00:20:42.385 --> 00:20:44.385
the useState hook. And then we can set

00:20:44.385 --> 00:20:47.585
stories to be a list of story one,

00:20:47.585 --> 00:20:57.670
story two, and story three. And lastly, just

00:20:57.670 --> 00:21:05.975
to see what this list looks like, I'll

00:21:05.975 --> 00:21:16.615
render it with the single story, with JSON.

00:21:16.615 --> 00:21:20.535
Stringify. And all this does is it takes

00:21:23.630 --> 00:21:26.670
a JSON object and then turns it into

00:21:26.670 --> 00:21:31.150
something readable. And that's going to be JavaScript,

00:21:31.150 --> 00:21:33.870
so we surround it in the curly brackets

00:21:34.785 --> 00:21:43.825
and then just pass in stories. So if

00:21:43.825 --> 00:21:45.985
we take this and then reload, we see

00:21:45.985 --> 00:21:48.625
we get a list of IDs and creator

00:21:48.625 --> 00:21:56.460
names and contents rendered here. So this is

00:21:56.460 --> 00:21:58.460
just hardcoded stories for now and then they

00:21:58.460 --> 00:22:03.195
still change in the future. Now we have

00:22:03.195 --> 00:22:05.595
multiple stories, and so far we've just rendered

00:22:05.595 --> 00:22:08.235
this one story down here. So we want

00:22:08.235 --> 00:22:09.915
to figure out how to render a list

00:22:09.915 --> 00:22:14.610
of these stories which can be variable. So

00:22:16.210 --> 00:22:27.945
check out W2 Step three. So this will

00:22:27.945 --> 00:22:31.705
be another follow along and we sort of

00:22:31.705 --> 00:22:35.305
want we want to render our stories that

00:22:35.305 --> 00:22:36.425
are in our list and we have a

00:22:36.425 --> 00:22:38.665
component to render a single story, which is

00:22:38.665 --> 00:22:41.225
called single story. And we need to somehow

00:22:41.225 --> 00:22:44.470
go from our list of information to a

00:22:44.470 --> 00:22:48.790
list of components. So yesterday we talked about

00:22:48.790 --> 00:22:53.030
the map function and the map function just

00:22:53.030 --> 00:22:55.750
takes in some list and then some function

00:22:55.750 --> 00:22:57.350
and then applies the function to everything in

00:22:57.350 --> 00:22:59.365
the list. So in our case, we have

00:22:59.365 --> 00:23:01.685
a list of just information, a list of

00:23:01.685 --> 00:23:04.165
JSON objects, and then we want to have

00:23:04.325 --> 00:23:06.885
instead a list of components, which is something

00:23:06.885 --> 00:23:09.845
that can be rendered by the JSX. So

00:23:09.845 --> 00:23:11.365
we can use the map function to do

00:23:11.365 --> 00:23:17.090
this and have some function that goes from

00:23:17.090 --> 00:23:20.610
just a list of information to a list

00:23:20.850 --> 00:23:35.355
of the actual components. So to do this,

00:23:35.835 --> 00:23:37.915
we use the map function syntax and then

00:23:37.915 --> 00:23:41.060
we'll create a variable to hold that new

00:23:41.220 --> 00:23:47.620
list of single stories. And also one other

00:23:47.620 --> 00:23:55.565
functionality want to also work with is create

00:23:55.565 --> 00:23:57.245
a fallback for when there are no stories

00:23:57.245 --> 00:24:04.125
in the stories list. So to do this

00:24:04.125 --> 00:24:09.350
most easily, we'll create some variable to hold

00:24:09.350 --> 00:24:13.510
our list of stories. And then first we'll

00:24:13.510 --> 00:24:17.830
check if there are stories at all. So

00:24:17.910 --> 00:24:19.750
we can check the length of the array.

00:24:20.150 --> 00:24:23.765
And if it's not equal to zero, then

00:24:24.885 --> 00:24:26.725
we can render the actual stories. But if

00:24:26.725 --> 00:24:28.645
it is equal to zero, we can set

00:24:28.645 --> 00:24:43.800
stories list to the no stories div that

00:24:43.800 --> 00:24:46.520
you want to render instead. But if there

00:24:46.520 --> 00:24:50.785
are stories, then we can use the map

00:24:50.785 --> 00:24:57.265
function. And the map function takes in you

00:24:57.265 --> 00:24:59.505
just put a dot after the list you

00:24:59.505 --> 00:25:01.185
want to apply the map to, and then

00:25:01.185 --> 00:25:03.745
you input the function that you want to

00:25:03.745 --> 00:25:06.370
apply. So the function we want apply is

00:25:06.370 --> 00:25:11.330
if we have some story, then we want

00:25:11.330 --> 00:25:15.330
to return a single story. And if we

00:25:15.330 --> 00:25:16.930
want to implicitly return, we can just use

00:25:16.930 --> 00:25:20.595
parentheses. And we can create a single story

00:25:20.595 --> 00:25:23.475
component. And we want to pass in the

00:25:23.475 --> 00:25:26.435
props. So if we have a story object

00:25:26.435 --> 00:25:28.995
which has ID, creator, name, and content, then

00:25:28.995 --> 00:25:31.475
we can just directly pass in the props

00:25:31.715 --> 00:25:34.520
that way. So ID is going to be

00:25:34.520 --> 00:25:39.400
equal to the stories ID, and then the

00:25:39.400 --> 00:25:41.560
content is going to be equal to the

00:25:41.560 --> 00:25:45.320
stories content, and then creator name is the

00:25:45.320 --> 00:25:55.535
same. So this creates a stories list, which

00:25:55.775 --> 00:25:57.935
is equal to there aren't any stories if

00:25:57.935 --> 00:26:00.095
there aren't any stories at all, and otherwise

00:26:00.095 --> 00:26:03.280
it maps it into a list of single

00:26:03.280 --> 00:26:08.800
stories. Now instead of just putting as JSON.

00:26:08.800 --> 00:26:11.280
Stringify of the stories, we can now input

00:26:11.280 --> 00:26:18.795
our stories list. And if we reload, we

00:26:18.795 --> 00:26:20.635
see that the three stories that we have

00:26:20.635 --> 00:26:26.875
within our story state is rendered. And now

00:26:26.875 --> 00:26:29.835
we can check whether our fallback works by,

00:26:32.010 --> 00:26:33.610
let's say we just delete the hard coded

00:26:33.610 --> 00:26:35.450
stories here and then just make it an

00:26:35.450 --> 00:26:38.970
empty list. Then we get the render, there

00:26:38.970 --> 00:26:45.145
aren't any stories. And if we change it

00:26:45.145 --> 00:26:51.545
back, we get the stories again. Okay. So

00:26:52.745 --> 00:26:55.945
that was step three. I'm going a little

00:26:55.945 --> 00:26:59.000
fast just because we're a bit behind. And

00:26:59.000 --> 00:27:02.680
our last step before we break will be

00:27:02.680 --> 00:27:06.840
step four, new story. So reset hard and

00:27:07.560 --> 00:27:20.595
check out step four. So step four will

00:27:20.595 --> 00:27:23.155
be another follow along. And now we're going

00:27:23.155 --> 00:27:26.195
to create a framework for inputting these stories.

00:27:26.810 --> 00:27:28.810
So this is to so we want a

00:27:28.810 --> 00:27:30.730
framework where we can modify the story state

00:27:30.730 --> 00:27:35.370
because we have a method to render stories

00:27:35.370 --> 00:27:38.890
based on a variable state of stories. And

00:27:38.890 --> 00:27:40.650
so now we just need to create something

00:27:40.650 --> 00:27:44.285
that can modify it. So this step is

00:27:44.285 --> 00:27:48.765
a bit long, and you can check all

00:27:48.765 --> 00:27:51.325
the places we need to modify for step

00:27:51.325 --> 00:28:04.980
four. So to start, alright. To start, we

00:28:04.980 --> 00:28:10.820
have this starter file called, called new post

00:28:10.820 --> 00:28:18.205
input, called new post input dot jsx. And

00:28:18.605 --> 00:28:22.365
in here we have this starter component that

00:28:22.365 --> 00:28:25.485
we've made, and it's called new post input.

00:28:25.645 --> 00:28:28.870
And can kind of take a look at

00:28:28.870 --> 00:28:30.550
it and try to parse what's going on.

00:28:30.870 --> 00:28:32.630
But I think it'll be easier to see

00:28:33.910 --> 00:29:17.415
if we just render it to start. So

00:29:17.415 --> 00:29:19.255
if you look at the rendering, it sort

00:29:19.255 --> 00:29:20.535
of just has a box and then a

00:29:20.535 --> 00:29:23.590
Submit button. And basically, the new post input

00:29:23.590 --> 00:29:30.070
is a nicely wrapped component where it takes

00:29:30.070 --> 00:29:31.910
in a number of props, which is default

00:29:31.910 --> 00:29:48.705
text, and then a callback function. And All

00:29:48.705 --> 00:29:50.830
right. Yeah. So it takes in a callback

00:29:50.830 --> 00:29:53.150
function and then some default text to render.

00:29:53.230 --> 00:30:04.785
So if we pass in those props and

00:30:04.785 --> 00:30:08.065
then let me see that we get some

00:30:08.065 --> 00:30:10.305
default text within the post box. So the

00:30:10.305 --> 00:30:12.545
reason that we have this more general component

00:30:12.545 --> 00:30:15.665
called new post input instead of separate new

00:30:15.665 --> 00:30:17.880
story input and new comment inputs is that

00:30:17.880 --> 00:30:20.280
in the future when we input in a

00:30:20.840 --> 00:30:23.000
when we start creating the comment section and

00:30:23.000 --> 00:30:25.320
then a functionality for adding more comments, we

00:30:25.320 --> 00:30:28.280
might want to have different callback functions for

00:30:28.280 --> 00:30:32.125
when the comment's submitted and different functionality when

00:30:32.285 --> 00:30:34.765
or different default text. So having a general

00:30:34.765 --> 00:30:39.165
component like this, you can use as a

00:30:39.165 --> 00:30:41.565
child component for both new story and new

00:30:41.565 --> 00:30:43.645
component is nice because it makes it reusable.

00:30:44.840 --> 00:30:49.080
So so now we'll create the actual new

00:30:49.080 --> 00:30:52.760
story component, which is more specific to new

00:30:52.760 --> 00:30:55.720
story rather than just a generic submission box.

00:30:58.275 --> 00:31:04.035
So to start, guess we can just we'll

00:31:04.035 --> 00:31:06.515
start in the feed file actually, because we

00:31:06.515 --> 00:31:10.035
want to have this new story input to

00:31:10.600 --> 00:31:12.760
modify the story state within the feed. And

00:31:12.760 --> 00:31:13.960
the best way to do that is to

00:31:13.960 --> 00:31:19.080
start by creating a function within the feed,

00:31:19.080 --> 00:31:22.920
because that's where the story state resides. Because

00:31:22.920 --> 00:31:24.840
otherwise, if you wanted to actually modify the

00:31:24.840 --> 00:31:26.815
stories object, then you'd have to pass that

00:31:26.815 --> 00:31:31.455
down into new story input. And it's more

00:31:31.455 --> 00:31:33.135
messy to pass these objects around, so this

00:31:33.135 --> 00:31:38.335
is just best practice. So we can create

00:31:38.575 --> 00:31:45.720
add new story, which takes in some story.

00:31:47.960 --> 00:31:51.320
And then after that, we want to modify

00:31:51.320 --> 00:31:55.015
the story state. So we can use the

00:31:55.015 --> 00:31:57.895
setStories function for that, and then we can

00:31:57.895 --> 00:31:59.735
use the syntax with the dot dot dots

00:31:59.735 --> 00:32:02.375
to have all the current set of stories,

00:32:02.455 --> 00:32:06.700
and then add in the new story. And

00:32:06.700 --> 00:32:08.060
then this is something that we're going to

00:32:08.060 --> 00:32:12.220
pass down into new post input in a

00:32:12.220 --> 00:32:17.100
sec. So within our new story function, have

00:32:17.100 --> 00:32:20.275
another callback function called add story. And this

00:32:20.275 --> 00:32:22.195
is a little bit repetitive, but this will

00:32:22.195 --> 00:32:24.995
make more sense tomorrow when we do more

00:32:24.995 --> 00:32:29.235
functionality within the add story function here besides

00:32:29.235 --> 00:32:32.790
just calling add new story. So we're going

00:32:32.790 --> 00:32:34.310
to pass the prop add new story into

00:32:34.310 --> 00:32:37.830
new story and then just actually add the

00:32:37.830 --> 00:32:40.950
new story. So this value here that we

00:32:40.950 --> 00:32:44.905
take in is just going to be I

00:32:44.905 --> 00:32:46.585
deleted the submission box. But it's just going

00:32:46.585 --> 00:32:47.865
to be the text you put into the

00:32:47.865 --> 00:32:50.425
submission box and then we want we're going

00:32:50.425 --> 00:32:51.705
to want to do something for that submission

00:32:51.705 --> 00:32:53.785
box. And in this case, we're going to

00:32:53.785 --> 00:32:55.705
want to add a new story based on

00:32:55.705 --> 00:32:59.160
that submission box. So the new story object

00:32:59.160 --> 00:33:00.760
is going to be something like the one

00:33:00.760 --> 00:33:04.600
over here. So we can just create a

00:33:04.600 --> 00:33:08.120
random ID. I'll just put random. And then

00:33:10.120 --> 00:33:13.705
put the creator name. Since right now we

00:33:13.705 --> 00:33:15.465
don't have any better info about who's actually

00:33:15.465 --> 00:33:18.825
creating it, we'll just call it anonymous. And

00:33:18.825 --> 00:33:22.265
then for the actual content here, we can

00:33:22.265 --> 00:33:23.785
use the value that's passed in through the

00:33:23.785 --> 00:33:30.680
submission box. So this add story function in

00:33:30.680 --> 00:33:33.400
new story, when triggered, is going to input

00:33:33.400 --> 00:33:35.640
this new value into add new story, which

00:33:35.640 --> 00:33:41.365
will accordingly update the story's state within feed.

00:33:42.725 --> 00:33:44.005
Now the last thing we need to do

00:33:44.005 --> 00:33:46.485
is just integrate this callback function that we

00:33:46.485 --> 00:33:50.085
created with new post input. This new post

00:33:50.085 --> 00:33:53.260
input lets us lets us submit a prop

00:33:53.260 --> 00:33:55.900
called on submit, which is triggered when a

00:33:55.900 --> 00:34:00.380
value is submitted. We can now return a

00:34:00.380 --> 00:34:04.575
new post input and then we could set

00:34:04.575 --> 00:34:08.415
the default text to just like enter your

00:34:08.415 --> 00:34:12.335
story here, and then create an on submit,

00:34:14.095 --> 00:34:16.340
and then set the on submit function to

00:34:16.340 --> 00:34:19.140
be equal to this add story function that

00:34:19.140 --> 00:34:24.900
we just created. So now we have a

00:34:24.900 --> 00:34:27.220
set of functions that updates the story state,

00:34:27.460 --> 00:34:29.700
and then now we've put that into the

00:34:29.700 --> 00:34:32.665
new story component, which is exported into feed.

00:34:38.745 --> 00:34:40.425
And then we can actually just render it

00:34:40.425 --> 00:34:48.840
at the top of our list. And we're

00:34:48.840 --> 00:34:50.360
going to want to pass in the prop

00:34:50.600 --> 00:34:53.240
add new story, which is just called add

00:34:53.240 --> 00:34:58.365
new story. So, yeah, if you see that,

00:34:58.365 --> 00:35:00.045
we see the enter story here, default text

00:35:00.045 --> 00:35:03.485
is filled in. And hopefully if we put

00:35:03.485 --> 00:35:08.205
in a new story and click submit, the

00:35:08.205 --> 00:35:10.605
story state is updated and now we can

00:35:10.605 --> 00:35:14.250
add stories to our website. And you can

00:35:14.250 --> 00:35:16.170
just keep on adding things and the list

00:35:16.170 --> 00:35:18.970
will just grow with the new stories that

00:35:18.970 --> 00:35:25.705
you add. All right, yeah. So that was

00:35:25.945 --> 00:35:27.785
that last step was kind of a lot.

00:35:29.145 --> 00:35:32.425
Are there any questions about creating the multiple

00:35:32.425 --> 00:35:45.710
callback functions to update the story state? If

00:35:45.710 --> 00:35:47.710
not, you can always add more questions to

00:35:47.710 --> 00:35:50.110
the questions doc and put yourself in the

00:35:50.110 --> 00:35:52.350
queue if you're behind. And if you want

00:35:52.350 --> 00:35:55.235
to get the actual result for what we

00:35:55.235 --> 00:35:58.275
did in step four, just reset hard and

00:35:58.275 --> 00:36:07.155
check out W2 step five. And you should

00:36:07.155 --> 00:36:15.320
get the same functionality. Okay. Yeah, I think

00:36:15.320 --> 00:36:29.555
we're going to pause here. Okay. I think

00:36:29.555 --> 00:36:33.315
we can get started again. Does anyone wanna

00:36:33.315 --> 00:36:37.315
sort of say what they think about the

00:36:37.315 --> 00:36:38.755
first one? Like, why do we have a

00:36:38.755 --> 00:36:42.280
separate new post input component instead of having

00:36:42.280 --> 00:36:46.360
two independently coded new story and new comment

00:36:46.360 --> 00:36:49.400
components? I don't wanna give a shot at

00:36:49.400 --> 00:36:55.745
this. Yeah. Like why do we do we

00:36:55.745 --> 00:36:59.025
abstract some of the functionality away into new

00:36:59.025 --> 00:37:04.465
post input instead of just creating a new

00:37:04.465 --> 00:37:07.745
story and then creating a new comment and

00:37:07.745 --> 00:37:17.930
not having the new post input? Okay. I

00:37:17.930 --> 00:37:21.130
kinda answered the question in the question, but

00:37:21.130 --> 00:37:25.095
it's like it's good for abstraction because when

00:37:25.095 --> 00:37:28.615
we have common functionalities because the new story

00:37:28.615 --> 00:37:30.615
and the new comment are gonna look very

00:37:30.615 --> 00:37:32.855
similar. They both have an input and a

00:37:32.855 --> 00:37:36.615
submit button, and they both send or do

00:37:36.615 --> 00:37:41.170
some behavior to an array. We wanna abstract

00:37:41.170 --> 00:37:44.210
all that functionality away so that we write

00:37:44.210 --> 00:37:47.170
as little repetitive code as possible. And this

00:37:47.170 --> 00:37:50.450
is just good coding practice in general applied

00:37:50.450 --> 00:37:57.435
to web development. So what are some things

00:37:57.435 --> 00:38:00.555
that are common to all the new blank

00:38:00.555 --> 00:38:10.530
components? Well, new story, I guess, like all

00:38:10.530 --> 00:38:11.890
the things that are common are gonna be

00:38:11.890 --> 00:38:15.570
inside the new post input component because new

00:38:15.570 --> 00:38:17.410
story calls new post input, and then new

00:38:17.410 --> 00:38:22.585
comment also calls new post input, eventually. But,

00:38:22.585 --> 00:38:24.265
I guess I already said this, they both

00:38:24.265 --> 00:38:26.345
have an input area where you type in

00:38:26.345 --> 00:38:29.705
text. They both have a submit button, and

00:38:29.705 --> 00:38:32.585
then they both have some function that you

00:38:32.585 --> 00:38:42.750
call whenever you press that submit button. And

00:38:42.750 --> 00:38:45.390
then, finally, the on submit prop for a

00:38:45.390 --> 00:38:50.430
new story component. You can always trace down

00:38:51.870 --> 00:38:53.735
you can always trace down the props of

00:38:53.735 --> 00:38:56.295
these components. Again, it's a tree, so there's

00:38:56.295 --> 00:38:59.575
one one unique path. If we look at

00:38:59.575 --> 00:39:09.010
a new story component, We return another component,

00:39:09.010 --> 00:39:11.250
the new post input, and we pass in

00:39:11.250 --> 00:39:14.370
on submit as a prop, or add story

00:39:14.370 --> 00:39:17.010
as a prop for the on submit prop.

00:39:19.655 --> 00:39:21.495
And add story is this callback function that

00:39:21.495 --> 00:39:26.535
we define in the component. Essentially, callback function

00:39:26.535 --> 00:39:29.735
is called whenever the submit button inside the

00:39:29.735 --> 00:39:34.460
new post input is called is pressed. And

00:39:34.460 --> 00:39:38.140
because the new story and the new comment

00:39:38.140 --> 00:39:41.500
will have different callback functions that are called

00:39:41.500 --> 00:39:43.900
whenever you press the submit button, that's why

00:39:43.900 --> 00:39:46.300
we have the functions defined inside new story

00:39:46.300 --> 00:39:49.340
and new comment respectively, instead of defining them

00:39:48.675 --> 00:39:53.635
both inside new post input. So we have

00:39:53.635 --> 00:39:56.115
to pass that callback function into the on

00:39:56.115 --> 00:40:01.715
submit prop, which is then used and accessed

00:40:01.715 --> 00:40:11.310
here props.onsubmit. Okay. Any questions about the first

00:40:11.310 --> 00:40:23.375
five steps? Okay. Yeah. So, so far, and

00:40:24.335 --> 00:40:26.815
I think it's pretty helpful to really take

00:40:26.815 --> 00:40:28.815
a look at steps two, three, and four,

00:40:28.815 --> 00:40:30.495
because you're gonna see very similar steps in

00:40:30.495 --> 00:40:34.140
steps six through eight. So far in step

00:40:34.140 --> 00:40:36.700
zero, we just simply replaced feed with profile.

00:40:37.180 --> 00:40:39.820
And then in step one, we created a

00:40:39.820 --> 00:40:45.755
hard coded state for the stories. In step

00:40:45.755 --> 00:40:49.195
two, we rendered a single story component using

00:40:49.275 --> 00:40:53.595
the dummy data from the state. In step

00:40:53.595 --> 00:40:55.595
three, we took our state, which is an

00:40:55.595 --> 00:40:59.355
array, and then we mapped that array to

00:40:59.355 --> 00:41:04.180
an array of JSX elements. I guess, sorry,

00:41:04.180 --> 00:41:09.620
an array of components, specifically single stories. And

00:41:09.620 --> 00:41:12.180
then finally in step four, we added a

00:41:12.180 --> 00:41:18.435
text box in at the top here so

00:41:18.435 --> 00:41:20.355
that you can add a new story. You

00:41:20.355 --> 00:41:22.355
can type something, and then press submit, and

00:41:22.355 --> 00:41:31.410
it shows up at the end. Okay. So

00:41:31.410 --> 00:41:34.770
step five is gonna be conceptually break away

00:41:34.770 --> 00:41:37.650
from all of this. And it's gonna be

00:41:37.650 --> 00:41:42.865
a bit new slash confusing probably. It's honestly

00:41:42.865 --> 00:41:47.745
a mini lecture within this workshop. But our

00:41:47.745 --> 00:41:49.985
next task is to add navigation within the

00:41:49.985 --> 00:41:53.105
website. And all of you have seen navigation

00:41:53.105 --> 00:42:02.750
before. Sorry. When you visit any URL, you

00:42:02.750 --> 00:42:05.790
see that this URL, the domain is like

00:42:06.030 --> 00:42:10.645
docs.google.com. Then afterwards, see the slash presentation and

00:42:10.645 --> 00:42:13.845
then slash d. All of this. All of

00:42:13.845 --> 00:42:16.645
this determines what we show to the front.

00:42:17.685 --> 00:42:19.925
And pretty much all these websites use routing.

00:42:24.380 --> 00:42:27.580
So what's our end goal? Our end goal

00:42:27.580 --> 00:42:29.820
is to have something that looks like this.

00:42:33.260 --> 00:42:35.100
We want to be able to toggle between

00:42:35.100 --> 00:42:38.300
the different components based on what URL we're

00:42:38.300 --> 00:42:44.425
at. So to specify the exact definition of

00:42:44.425 --> 00:42:47.065
URL, this is gonna be the base URL.

00:42:48.105 --> 00:42:50.745
It could be like catbook.com. In our case,

00:42:50.745 --> 00:42:55.210
it's localhost colon 50 one 70 three, and

00:42:55.210 --> 00:42:58.170
then plus whatever route path you append after.

00:42:59.210 --> 00:43:01.610
By default, the route path is gonna be

00:43:01.610 --> 00:43:03.690
like a forward slash, which is equivalent to

00:43:03.690 --> 00:43:07.130
having no route path. So these two URLs

00:43:07.130 --> 00:43:09.345
are gonna do the same thing, except in

00:43:09.345 --> 00:43:15.425
very specific nuanced cases, I think. And then

00:43:15.585 --> 00:43:18.865
you can do something like catbook.com/profile, and this

00:43:18.865 --> 00:43:21.425
should show you a different page from catbook.com

00:43:21.425 --> 00:43:27.440
with just a forward slash. And then, at

00:43:27.440 --> 00:43:29.280
least in our example, if we have some

00:43:29.280 --> 00:43:31.600
URL that has some random route path, we

00:43:31.600 --> 00:43:35.200
wanna show a not found component, because this

00:43:35.440 --> 00:43:37.440
path doesn't actually make any sense to us.

00:43:37.440 --> 00:43:38.960
We only have two valid paths for the

00:43:38.960 --> 00:43:42.375
user. Either the base path, the base URL,

00:43:42.375 --> 00:43:45.575
or the base URL plus the profile path.

00:43:50.775 --> 00:43:53.015
Visually, it's gonna look like this. And I

00:43:53.015 --> 00:43:57.810
realize it's really small, but this says 5173,

00:43:58.050 --> 00:44:01.250
and this shows our feed. So this is

00:44:01.250 --> 00:44:06.450
the base URL. And then this one is

00:44:06.450 --> 00:44:09.645
localhost 50 one 70 three slash profile. And

00:44:09.645 --> 00:44:11.805
at this route, at the slash profile route,

00:44:11.805 --> 00:44:17.565
we wanna show the profile component. And then

00:44:17.565 --> 00:44:19.645
finally, if we have some random thing like

00:44:19.645 --> 00:44:23.290
asdf or anything else that's not a forward

00:44:23.290 --> 00:44:26.730
slash or a profile, we've already created this

00:44:26.730 --> 00:44:29.450
component for you inside the code. It's called

00:44:30.250 --> 00:44:33.050
not found dot jsx. And we can just

00:44:33.050 --> 00:44:35.375
import it. But we want to render that

00:44:35.375 --> 00:44:38.415
whenever we reach some random path that we

00:44:38.415 --> 00:44:41.855
don't recognize. So any questions about what our

00:44:41.855 --> 00:44:52.180
goal is with these routes? Okay. While I'm

00:44:52.180 --> 00:44:54.100
talking, you can also just check out step

00:44:54.100 --> 00:45:00.900
five if you haven't already. But for routing,

00:45:01.460 --> 00:45:03.715
the I guess, standard way to do it

00:45:03.715 --> 00:45:06.915
is using a library called React Router. There

00:45:06.915 --> 00:45:10.435
are many router packages. In fact, in the

00:45:10.435 --> 00:45:12.195
past we used to teach one called Reach

00:45:12.195 --> 00:45:15.475
Router. All of them behave sort of differently,

00:45:15.555 --> 00:45:19.000
but the main core ideas are all the

00:45:19.000 --> 00:45:23.400
same. It sort of tells React how to

00:45:23.400 --> 00:45:26.920
handle when you're at different URLs which components

00:45:26.920 --> 00:45:31.725
to render. React Router is gonna be discussed

00:45:31.725 --> 00:45:33.565
in a future lecture. We're gonna go a

00:45:33.565 --> 00:45:36.685
lot more into what's actually happening underneath the

00:45:36.765 --> 00:45:40.125
hood. And for this lecture, because we have

00:45:40.125 --> 00:45:42.685
such a simple router setup, we only have

00:45:42.685 --> 00:45:45.740
two pages, the feed and the profile. You

00:45:45.740 --> 00:45:47.500
don't actually need to know exactly what's going

00:45:47.500 --> 00:45:49.820
on to be able to code this up.

00:45:54.300 --> 00:45:57.580
Okay. So this isn't something that you have

00:45:57.580 --> 00:45:59.180
to do because we've already set this up

00:45:59.180 --> 00:46:01.475
for you, but in general whenever you need

00:46:01.475 --> 00:46:03.795
an external package, you have to go to

00:46:03.795 --> 00:46:07.475
your package dot JSON file inside your code.

00:46:08.195 --> 00:46:09.635
So I'm gonna open that up real quick

00:46:09.635 --> 00:46:16.240
just to show you. In package dot JSON,

00:46:16.880 --> 00:46:18.880
you can go under dependencies and see all

00:46:18.880 --> 00:46:22.400
the packages that you're dependent on. This is

00:46:22.400 --> 00:46:24.720
pretty similar to when you're in a Python

00:46:24.720 --> 00:46:26.800
environment, if you've worked with that before, and

00:46:26.800 --> 00:46:32.205
you have PIP, there's a lot of package

00:46:32.525 --> 00:46:37.645
managers for you, like PIP, Conda. Yeah, there's

00:46:37.645 --> 00:46:42.310
a lot of different things. We use NPM,

00:46:42.310 --> 00:46:46.710
node package manager, and then once we specify

00:46:46.710 --> 00:46:49.990
a package in here, specifically like React Router

00:46:49.990 --> 00:46:53.155
DOM, and then give it a version, This

00:46:53.155 --> 00:46:55.075
meaning that the version has to be at

00:46:55.075 --> 00:46:57.875
least six point o o, and then we

00:46:57.875 --> 00:47:01.075
run NPM install. This is what actually lets

00:47:01.075 --> 00:47:04.275
us use all the code inside of this

00:47:04.275 --> 00:47:08.560
package. So just to show you that if

00:47:08.560 --> 00:47:13.600
I delete my node modules and then try

00:47:13.600 --> 00:47:19.280
going back to the website, maybe it shouldn't

00:47:19.280 --> 00:47:22.095
work. Oh, maybe it still does work. But

00:47:22.095 --> 00:47:24.655
I wouldn't be able to do anything with

00:47:24.655 --> 00:47:28.575
a router, so I need to npm install

00:47:28.575 --> 00:47:30.495
so that I have access to this package.

00:47:33.870 --> 00:47:42.830
Okay. Enough about that. So part one for

00:47:42.830 --> 00:47:45.470
creating a router. And this is gonna be

00:47:45.470 --> 00:47:47.710
a follow along. So if you could please

00:47:47.710 --> 00:48:00.235
pull up index dot jsx. And notice that

00:48:00.235 --> 00:48:03.995
index dot jsx is the root React component.

00:48:04.550 --> 00:48:07.190
And you know this because or this is

00:48:07.190 --> 00:48:10.710
where you're defining the root React component. Because

00:48:10.710 --> 00:48:14.950
you see this code that says React DOM

00:48:14.950 --> 00:48:17.350
dot create root document dot get element by

00:48:17.350 --> 00:48:21.435
ID root, and this is rendering app. We

00:48:21.435 --> 00:48:24.155
saw this in the lecture from this morning,

00:48:24.875 --> 00:48:28.075
but in the root component is where you

00:48:28.075 --> 00:48:32.500
should do all of your router logic. Part

00:48:32.500 --> 00:48:35.780
one, I'm just gonna uncomment all these imports.

00:48:38.180 --> 00:48:40.180
We import from React Router DOM the same

00:48:40.180 --> 00:48:42.260
way that we do for anything else. We

00:48:42.260 --> 00:48:44.660
just specify the things we want from it,

00:48:44.660 --> 00:48:48.225
and then from the package name and strings.

00:48:51.985 --> 00:48:55.025
Okay. And then also at the top, I

00:48:55.025 --> 00:48:57.425
didn't add this as a slide, but go

00:48:57.425 --> 00:49:10.580
ahead and import feed. Not found. This should

00:49:10.580 --> 00:49:19.495
be under pages as well. And then profile.

00:49:23.815 --> 00:49:25.415
So you might be wondering, this is pretty

00:49:25.415 --> 00:49:29.290
strange because before we had all of that

00:49:29.290 --> 00:49:32.250
imported inside of app, we would just render

00:49:32.250 --> 00:49:34.890
either profile or feed inside of app. Now

00:49:34.890 --> 00:49:36.810
we're taking all those components and bringing it

00:49:36.810 --> 00:49:44.055
into our index dot JSX. So, this doesn't

00:49:44.055 --> 00:49:46.615
seem to make sense because it's not actually

00:49:46.615 --> 00:49:49.575
needed this high up the tree normally, but

00:49:49.575 --> 00:49:51.095
with the router, we actually do need it

00:49:51.095 --> 00:49:58.630
all the way up here inside index. Okay.

00:49:59.110 --> 00:50:03.270
So now that we have this imported, next

00:50:03.270 --> 00:50:05.270
step is a lot of code at once.

00:50:05.510 --> 00:50:07.910
But this code is gonna be very standard.

00:50:08.705 --> 00:50:10.785
And in fact, I think all the code

00:50:10.785 --> 00:50:13.105
moving forward for the router isn't gonna change

00:50:13.105 --> 00:50:17.185
much or diverge much from this. Especially these

00:50:17.185 --> 00:50:20.945
first two lines, where we define a constant

00:50:20.945 --> 00:50:23.825
called router, and then set this equal to

00:50:24.460 --> 00:50:27.420
create browser router, which we just imported, called

00:50:27.420 --> 00:50:31.020
on create routes from elements. And then inside

00:50:31.020 --> 00:50:33.180
is where we actually handle all of the

00:50:33.180 --> 00:50:37.260
logic for creating these routes. So I'm just

00:50:37.260 --> 00:50:44.405
gonna type this in real quick. Create browser

00:50:44.405 --> 00:50:52.740
router. Create routes from elements. And then inside

00:50:52.740 --> 00:50:56.420
here, I'm gonna be putting my route components.

00:50:59.300 --> 00:51:02.260
Okay. So how do we do these route

00:51:02.260 --> 00:51:19.835
components? Sorry, one sec. I guess let me

00:51:19.835 --> 00:51:24.190
explain this this code more in-depth. So what

00:51:24.190 --> 00:51:27.790
we're doing is we're creating an opening route

00:51:27.790 --> 00:51:31.310
tag. And this route takes in two props.

00:51:31.470 --> 00:51:34.030
One being the error element, as well as

00:51:34.030 --> 00:51:37.395
the element. The error element is just an

00:51:37.395 --> 00:51:39.715
optional element that we can pass if we

00:51:39.715 --> 00:51:43.235
reach some sort of error. The most important

00:51:43.235 --> 00:51:45.875
thing is all of these routes need some

00:51:45.875 --> 00:51:48.675
element, and we set this equal to whatever

00:51:48.675 --> 00:51:54.590
element we wanna render. So, on the very

00:51:54.590 --> 00:51:58.830
outside, we wanna render app. And that's what

00:51:58.830 --> 00:52:01.150
we're doing, like, down in the code. We're

00:52:01.150 --> 00:52:06.845
rendering app. But we've seen that there's some

00:52:06.845 --> 00:52:09.725
behavior with the routes that determines which inner

00:52:09.725 --> 00:52:12.285
components we wanna render. Based on the route,

00:52:12.285 --> 00:52:16.525
we either wanna render feed or profile. And

00:52:16.525 --> 00:52:19.560
that's why we nest both of these routes,

00:52:19.560 --> 00:52:22.600
one for feed and one for profile, inside

00:52:22.600 --> 00:52:31.000
of this outer route. So the route for

00:52:31.000 --> 00:52:35.215
feed again was just the slash or the

00:52:35.215 --> 00:52:39.455
base URL. And then the route for profile

00:52:39.455 --> 00:52:43.935
was forward slash and then profile. So these

00:52:43.935 --> 00:52:46.415
inner routes are taking in both path and

00:52:46.415 --> 00:52:49.910
element as props. The outer one really only

00:52:49.910 --> 00:52:53.590
needs element equals app. But because we want

00:52:53.590 --> 00:52:55.190
to show a page when we reach some

00:52:55.190 --> 00:52:57.910
path that's not either forward slash or forward

00:52:57.910 --> 00:53:00.550
slash profile, then we have an error element

00:53:00.550 --> 00:53:07.155
that displays the not found component. Okay. Stopping

00:53:07.155 --> 00:53:15.395
here. Any questions about this? I'm gonna type

00:53:15.395 --> 00:53:50.210
this in real quick too. Notice that the

00:53:50.210 --> 00:53:53.170
inside routes are self closing while the outside

00:53:53.170 --> 00:54:10.275
route is not. Okay. Should look good. Moving

00:54:10.275 --> 00:54:13.830
on. We're not completely done yet. Even though

00:54:13.830 --> 00:54:16.710
we've created the routing logic, or most of

00:54:16.710 --> 00:54:19.110
it, we've created the router. We actually have

00:54:19.110 --> 00:54:22.310
to put it somewhere so that it's actually

00:54:22.310 --> 00:54:32.725
rendered. Yes. Yeah, so I think the error

00:54:32.725 --> 00:54:36.325
element probably could go in here. I'm not

00:54:36.325 --> 00:54:40.360
exactly too sure, but the reason why we

00:54:40.360 --> 00:54:46.520
have App is either displayed, which displays feeder

00:54:46.520 --> 00:54:50.440
profile, or nothing is displayed at all. So

00:54:50.440 --> 00:54:53.195
if we had an error element here, we

00:54:53.195 --> 00:54:56.955
sort of wanna catch any bad paths outside

00:54:57.195 --> 00:55:01.115
and not inside. At least in this case,

00:55:01.195 --> 00:55:04.235
because if it was inside, we would still

00:55:04.235 --> 00:55:10.290
be rendering app. Yeah. Yeah. I think there

00:55:10.290 --> 00:55:12.290
are probably better experts at React Router than

00:55:12.290 --> 00:55:19.825
me. You can probably ask them. So this

00:55:19.825 --> 00:55:21.825
next step is pretty simple. We just go

00:55:21.825 --> 00:55:24.545
down where we're creating the roots and rendering.

00:55:24.865 --> 00:55:28.385
And instead of rendering the app, I'm gonna

00:55:28.385 --> 00:55:31.185
comment that out and then we're gonna render

00:55:31.185 --> 00:55:34.240
router provider instead, which we imported from from

00:55:34.240 --> 00:55:44.640
React RouterDOM. Router provider takes in a prop

00:55:44.640 --> 00:55:47.840
called router, and we pass in the router

00:55:47.840 --> 00:55:56.855
that we just created. Okay. So far, so

00:55:56.855 --> 00:56:03.070
good? Alright. We're almost done. Or at least

00:56:03.070 --> 00:56:05.150
we're done with the changes we need in

00:56:05.150 --> 00:56:13.310
index. Jsx. The next thing is like taking

00:56:13.310 --> 00:56:14.990
a step back and looking at the component

00:56:14.990 --> 00:56:16.670
diagram. We have the nav bar on the

00:56:16.670 --> 00:56:20.925
top and then the feed for the base

00:56:20.925 --> 00:56:22.285
URL, and then we have the nav bar

00:56:22.285 --> 00:56:23.405
on the top and then profile for a

00:56:23.405 --> 00:56:25.805
slash profile. And then not found just takes

00:56:25.805 --> 00:56:27.485
the whole page if we reach some path

00:56:27.485 --> 00:56:31.930
that's not recognizable. So this means that we

00:56:31.930 --> 00:56:34.490
probably want our navbar to lie inside of

00:56:34.490 --> 00:56:39.050
app, right? Because when we're rendering not found,

00:56:39.050 --> 00:56:48.565
we don't wanna render the navbar. So this

00:56:48.565 --> 00:56:51.045
is a React Router tree, which you'll see

00:56:51.045 --> 00:56:55.365
in the React Router lecture more. But this

00:56:55.365 --> 00:56:57.365
left component is like the element that's rendered

00:56:57.365 --> 00:57:00.310
normally. That's the error element. And then these

00:57:00.310 --> 00:57:02.310
are the elements that are rendered based on

00:57:02.310 --> 00:57:09.350
what path you're at. And so how do

00:57:09.350 --> 00:57:13.830
you actually render one of these components inside

00:57:13.830 --> 00:57:16.895
of app? And to do that, it's a

00:57:16.895 --> 00:57:19.615
really simple change. We just go into app

00:57:19.615 --> 00:57:25.055
dot j s x. At the top, import

00:57:25.055 --> 00:57:31.200
something called outlet from React RouterDOM. And then

00:57:31.200 --> 00:57:33.680
instead of having the feed, we just let

00:57:33.920 --> 00:57:36.240
the router handle it based on the logic

00:57:36.240 --> 00:57:40.240
inside index dot JSX. And then we just

00:57:40.720 --> 00:57:44.145
create this outlet component. We don't even need

00:57:44.145 --> 00:57:46.865
to feed anything. It just knows by itself.

00:57:54.065 --> 00:57:56.385
And now let me take a look at

00:57:56.385 --> 00:58:03.470
the website. Hopefully, we haven't changed the nav

00:58:03.470 --> 00:58:05.630
bar yet, but hopefully if I go to

00:58:05.630 --> 00:58:09.950
something like profile awesome. Okay. Now we see

00:58:09.950 --> 00:58:14.205
the profile component. The feed is still working

00:58:14.205 --> 00:58:17.165
if I go to the base URL. And

00:58:17.165 --> 00:58:20.685
then if I visit something random, it's gonna

00:58:20.685 --> 00:58:27.520
show the not found component. Okay. So that's

00:58:27.520 --> 00:58:30.240
pretty much all we needed, at least for

00:58:30.240 --> 00:58:34.960
the router. The last part being, we want

00:58:34.960 --> 00:58:36.400
to be able to navigate to these different

00:58:36.400 --> 00:58:39.120
pages without having to go to the search

00:58:39.120 --> 00:58:42.055
bar and then change the URL. So to

00:58:42.055 --> 00:58:44.855
do that, React Router also has links that

00:58:44.855 --> 00:58:47.495
you can click to change the URL automatically.

00:58:51.255 --> 00:58:53.015
And we're gonna add this to our nav

00:58:53.015 --> 00:58:56.760
bar. So at the top in nav bar,

00:58:57.640 --> 00:59:00.680
go ahead and import link from React Router

00:59:00.680 --> 00:59:12.595
DOM. And then we want these links to

00:59:12.595 --> 00:59:15.075
be like to the right here and here

00:59:15.075 --> 00:59:17.155
for a home and profile. So I'll just

00:59:17.155 --> 00:59:24.260
create two links. One link has its to

00:59:24.260 --> 00:59:25.860
or, like, the URL that you wanna send

00:59:25.860 --> 00:59:30.100
it to to be the base URL, and

00:59:30.100 --> 00:59:32.500
it's gonna have the text home. And then

00:59:32.500 --> 00:59:33.780
the other one is gonna send you to

00:59:33.780 --> 00:59:40.585
profile. I'll wrap all this around in a

00:59:40.585 --> 00:59:50.985
div. And then for sim CSS, I believe

00:59:50.985 --> 00:59:55.840
inside the navbar.css, you can see navbar link

00:59:55.840 --> 01:00:01.440
container. And then for each of these links,

01:00:01.760 --> 01:00:04.000
I'm gonna give it some CSS as well.

01:00:04.480 --> 01:00:21.990
Navbar link. Okay. Now if I refresh, press

01:00:21.990 --> 01:00:24.950
home, it goes to home. Go to profile.

01:00:24.950 --> 01:00:29.590
Okay. Awesome. So these buttons work. And then

01:00:29.590 --> 01:00:32.390
finally, I'm just gonna get reset hard and

01:00:32.390 --> 01:00:34.630
show you the final code. You can add

01:00:34.630 --> 01:00:36.790
a bit more CSS to make it inlined.

01:00:41.795 --> 01:00:50.060
Using the u inline block class. Okay. That's

01:00:50.060 --> 01:00:52.620
a lot in router. Anyone have any questions

01:00:52.620 --> 01:01:02.635
about router? How we implemented anything here? Okay.

01:01:04.635 --> 01:01:07.835
Cool. Steps six through eight. I don't know

01:01:07.835 --> 01:01:09.115
if we'll have time for all of this,

01:01:09.115 --> 01:01:12.315
but steps six through eight are analogous to

01:01:12.315 --> 01:01:15.580
steps this is a typo, two to four,

01:01:15.580 --> 01:01:20.060
where you worked in feed. Js to create

01:01:20.060 --> 01:01:25.820
these stories that display on the website. Inside

01:01:25.820 --> 01:01:29.340
the feed, which is this outer component, you

01:01:28.325 --> 01:01:32.005
render lots of individual single stories. And in

01:01:32.005 --> 01:01:34.725
steps six through eight, we're going to create

01:01:34.725 --> 01:01:38.805
a card component that contains a story as

01:01:38.805 --> 01:01:40.965
well as all the comments related to that

01:01:40.965 --> 01:01:44.930
story. And then we're gonna render the comments

01:01:44.930 --> 01:01:47.650
very similarly to how we render the stories

01:01:47.650 --> 01:01:54.370
inside Feed. Okay. So if you haven't already,

01:01:54.690 --> 01:02:15.740
check out step six. Okay. Okay. So, yeah.

01:02:15.740 --> 01:02:18.940
Our current component structure, at least at the

01:02:18.940 --> 01:02:22.300
root of feed, is feed has single stories.

01:02:23.180 --> 01:02:24.620
And now we wanna change it so that

01:02:24.620 --> 01:02:28.825
feed renders a card, which then renders a

01:02:28.825 --> 01:02:31.465
single story and then comments. This is so

01:02:31.465 --> 01:02:33.625
that inside our feed, instead of rendering single

01:02:33.625 --> 01:02:36.905
story then comments, single story comment, which doesn't

01:02:36.905 --> 01:02:40.265
really make any sense, now we abstract away

01:02:40.500 --> 01:02:43.300
this entire story and comment together into one

01:02:43.300 --> 01:02:45.940
single card, and that way we can still

01:02:45.940 --> 01:02:49.380
map all the stories inside our feed to

01:02:49.380 --> 01:02:55.115
card elements, but then card elements map, or

01:02:55.115 --> 01:02:57.595
I guess take that story object, render the

01:02:57.595 --> 01:03:00.235
story of course, but also obtain the comments

01:03:00.235 --> 01:03:02.235
for the story, and then render those as

01:03:02.235 --> 01:03:06.395
well. I guess it's a bit confusing without

01:03:06.395 --> 01:03:09.950
an example. Anyone unclear about what this is

01:03:09.950 --> 01:03:19.470
doing? Yeah, before these green boxes were the

01:03:19.470 --> 01:03:23.445
single stories. Now we're creating this card and

01:03:23.445 --> 01:03:25.765
then the same single story component is being

01:03:25.765 --> 01:03:27.925
rendered inside card. And then we're gonna render

01:03:27.925 --> 01:03:33.685
comments down here. So for step six, I'll

01:03:33.685 --> 01:03:40.570
let you guys work on this yourself. I

01:03:40.570 --> 01:03:44.090
highly recommend going to oh, one quick thing.

01:03:45.130 --> 01:03:47.050
Make sure to git pull because there have

01:03:47.050 --> 01:03:50.225
been some changes to the branches since you

01:03:50.225 --> 01:03:53.825
probably last checked them out. So at the

01:03:53.825 --> 01:03:58.145
bottom, make sure you git pull. And to

01:03:58.145 --> 01:03:59.905
make sure that you're up to date, you

01:03:59.905 --> 01:04:03.020
can do git status, and it should say

01:04:03.020 --> 01:04:04.380
that your branch is up to date with

01:04:04.380 --> 01:04:09.420
origin slash w two step six. If you

01:04:09.420 --> 01:04:11.500
have issues with this, also hop on the

01:04:11.500 --> 01:04:13.900
queue. If you want help with this as

01:04:13.900 --> 01:04:16.335
well, please hop on the queue. The staff

01:04:16.335 --> 01:04:18.655
are not doing anything right now, so they

01:04:18.655 --> 01:04:25.695
can help as much as you want. But,

01:04:25.695 --> 01:04:28.255
yeah, once you've done that, search up to

01:04:28.255 --> 01:04:32.310
do six or sorry, step six, and then

01:04:32.630 --> 01:04:39.750
follow all the steps in here. I'll give

01:04:39.750 --> 01:04:42.230
you around five minutes. Feel free to work

01:04:42.230 --> 01:04:56.415
with the neighbors around you. Okay. I'm just

01:04:56.415 --> 01:04:59.375
gonna go go ahead and start. Feel free

01:04:59.375 --> 01:05:01.055
to tune me out if you're really close

01:05:01.055 --> 01:05:06.420
and are about to finish. But the way

01:05:06.420 --> 01:05:08.500
I'm gonna work through this is I'm just

01:05:08.500 --> 01:05:13.140
gonna go through and implement this component tree.

01:05:14.020 --> 01:05:17.060
So starting at the top, instead of having

01:05:17.060 --> 01:05:21.585
the feed render these single stories, I wanna

01:05:21.585 --> 01:05:25.905
render card instead. So to do that, I

01:05:25.905 --> 01:05:30.785
can just import card, which is in the

01:05:30.785 --> 01:05:35.920
modules folder. And now that now that I

01:05:35.920 --> 01:05:39.280
have access to the card component and just

01:05:39.280 --> 01:05:41.520
taking a look at card, it seems like

01:05:41.520 --> 01:05:43.840
I can just replace single story with card

01:05:43.840 --> 01:05:46.320
because the props that single story take are

01:05:46.320 --> 01:05:48.515
actually the same as the props that card

01:05:48.515 --> 01:05:53.235
takes. It's just ID, creator name, and content.

01:05:55.555 --> 01:05:58.275
So if I do this now and take

01:05:58.275 --> 01:06:00.675
a look at my website, I should see

01:06:00.675 --> 01:06:03.900
nothing, which makes sense because I haven't implemented

01:06:03.900 --> 01:06:09.660
the card component yet. As a placeholder, I'm

01:06:09.660 --> 01:06:14.780
just gonna return hi. And then now I

01:06:14.780 --> 01:06:19.055
see three highs. So the card component is

01:06:19.055 --> 01:06:22.095
indeed rendering. I just now have to render

01:06:22.095 --> 01:06:24.015
the single story and comments inside of the

01:06:24.015 --> 01:06:30.310
card component. So let me see. Looking at

01:06:30.310 --> 01:06:33.270
to dos or step six, everything that's left

01:06:33.270 --> 01:06:40.150
is in card. So big picture, what are

01:06:40.150 --> 01:06:42.950
we doing in card? We're creating a comments

01:06:42.950 --> 01:06:45.515
state or a state that stores all the

01:06:45.515 --> 01:06:49.275
comments related to a post. And then we're

01:06:49.275 --> 01:06:51.835
gonna render that alongside the story that were

01:06:51.835 --> 01:06:57.310
passed down. So to start, I'm actually gonna

01:06:57.310 --> 01:06:58.990
do this part that we already have, which

01:06:58.990 --> 01:07:04.990
is rendering the story. Single story takes in

01:07:04.990 --> 01:07:08.510
these same props as card. So single story's

01:07:08.510 --> 01:07:12.135
id prop is going to be our props

01:07:12.135 --> 01:07:15.575
dot ID, which is passed down from feed

01:07:16.695 --> 01:07:22.135
over here. And then the creator name is

01:07:22.135 --> 01:07:27.820
equal to props dot creator name, and the

01:07:27.820 --> 01:07:37.740
content equals props .content. And don't forget to

01:07:38.300 --> 01:07:45.405
import your components. Okay. So it seems like

01:07:45.405 --> 01:07:49.165
it's working now. All I've done is essentially

01:07:49.725 --> 01:07:52.685
ignore the comments. I've essentially added a new

01:07:52.685 --> 01:07:55.140
stage between the feed and single story. Now

01:07:55.140 --> 01:07:59.380
it's rendering card, which renders single story. And

01:07:59.940 --> 01:08:02.500
the remaining step is adding the comments into

01:08:02.500 --> 01:08:05.540
the card. So for the comments, I'm gonna

01:08:05.540 --> 01:08:07.300
have to use a state to store it.

01:08:07.700 --> 01:08:17.895
So imports use state from React. And then

01:08:17.895 --> 01:08:20.135
up here at the top of the component,

01:08:20.215 --> 01:08:23.895
I will define the common state. So const

01:08:24.840 --> 01:08:31.720
comments set comments equals use state. And just

01:08:31.720 --> 01:08:34.520
like the feed, I'm gonna initialize this to

01:08:34.520 --> 01:08:38.435
an empty array. So I'm really copying over

01:08:38.435 --> 01:08:40.675
or doing everything analogous to, like, what I

01:08:40.675 --> 01:08:46.275
did in the feed. And then in the

01:08:46.275 --> 01:08:49.075
useEffects, when the component is first mounted, so

01:08:49.235 --> 01:08:54.230
whenever one of these cards first mounts, I'm

01:08:54.230 --> 01:08:56.470
gonna populate it with some comments or some

01:08:56.470 --> 01:09:02.390
dummy comments. And for now, me just do

01:09:02.390 --> 01:09:09.475
like sets comments to high, which means that

01:09:09.475 --> 01:09:11.955
every single card that's rendered is gonna have,

01:09:12.355 --> 01:09:15.235
its common state be equal to high after

01:09:15.235 --> 01:09:21.520
the, after the mounting. And then down here,

01:09:21.520 --> 01:09:24.080
just to see what it looks like, I'm

01:09:24.080 --> 01:09:27.920
gonna JSON dot stringify this list, the common

01:09:27.920 --> 01:09:46.635
state. I'll open the console. Identifier singer single

01:09:46.635 --> 01:09:57.810
story has already been declared. Okay. Thanks. Okay.

01:09:58.770 --> 01:10:01.090
Yeah. So now I see hi underneath every

01:10:01.090 --> 01:10:08.205
single story. Okay. And then I'm just gonna

01:10:08.205 --> 01:10:10.605
reset this and check out to see what

01:10:10.605 --> 01:10:16.525
I would be doing inside this useEffects. So

01:10:15.840 --> 01:10:17.680
if you could also do this, check out

01:10:17.680 --> 01:10:24.480
step seven. Essentially, we're doing here is I've

01:10:24.480 --> 01:10:27.280
created like a master list of all the

01:10:27.280 --> 01:10:31.095
comments under any single post that ever existed.

01:10:32.135 --> 01:10:36.295
So there's three comments that ever existed. The

01:10:36.295 --> 01:10:40.375
first comment has a parent whose story has

01:10:40.375 --> 01:10:44.660
ID one, ID one. And this corresponds to

01:10:44.660 --> 01:10:49.300
this first story because as you see here,

01:10:49.300 --> 01:10:51.380
we created the first story to have ID

01:10:51.380 --> 01:10:57.155
one. And then the second comment has parent

01:10:57.155 --> 01:10:59.555
id two, third comment has parent id three.

01:11:00.035 --> 01:11:02.435
And the reason not all of these comments

01:11:02.435 --> 01:11:04.835
are being rendered or set to the comment

01:11:04.835 --> 01:11:09.235
state is because I'm filtering all of these

01:11:09.235 --> 01:11:13.210
hard coded comments to find the comments that

01:11:13.210 --> 01:11:21.450
have the same parents in here as the

01:11:21.450 --> 01:11:23.530
ID of the story that it belongs to,

01:11:23.530 --> 01:11:26.635
that it's nested under. So, for example, if

01:11:26.635 --> 01:11:30.715
I'm here in this component, the props dot

01:11:30.715 --> 01:11:33.995
id underscore id that's passed in is id

01:11:33.995 --> 01:11:38.680
one. This is passed from the story, from

01:11:38.680 --> 01:11:43.240
the feed component. And then inside the use

01:11:43.240 --> 01:11:46.520
effects, I'm filtering for all comments that have

01:11:46.520 --> 01:11:50.120
the parent ID ID one, which is just

01:11:50.120 --> 01:11:53.025
this first comment. So that's why when I

01:11:53.025 --> 01:11:57.345
set comments to this filter, it only returns

01:11:57.345 --> 01:11:59.825
an array that's length one that contains this

01:11:59.825 --> 01:12:03.025
first comment, which is why for all of

01:12:03.025 --> 01:12:05.110
them you only see one comment. But in

01:12:05.110 --> 01:12:07.430
reality, if I added another comment like this

01:12:09.190 --> 01:12:13.430
with the same ID ID three and then

01:12:13.430 --> 01:12:18.390
comment four. Now if I look under story

01:12:18.390 --> 01:12:23.275
three, I should see two comments. Any questions

01:12:23.275 --> 01:12:37.930
about how this worked? Okay. Let's move on

01:12:37.930 --> 01:12:42.970
to step seven. This is just styling comments.

01:12:43.690 --> 01:13:12.880
Oh, yes. Yeah. That's a good point. Great

01:13:12.880 --> 01:13:14.640
point because it reminds me to point out

01:13:14.640 --> 01:13:18.095
that the code here inside these two use

01:13:18.095 --> 01:13:20.655
effects where we first load the stories and

01:13:20.655 --> 01:13:23.055
load the comments, this is really bad code.

01:13:23.135 --> 01:13:25.135
And we're just using this code to demonstrate

01:13:25.135 --> 01:13:28.255
what it would look like on the website.

01:13:29.535 --> 01:13:34.630
In reality, yeah, it would start off as

01:13:34.630 --> 01:13:36.550
no comments and then inside this use effects

01:13:36.550 --> 01:13:39.830
we actually like request the comments for a

01:13:39.830 --> 01:13:41.830
given story. So it's not like hard coded

01:13:41.830 --> 01:13:45.510
or anything like this. In workshop three, you'll

01:13:45.510 --> 01:13:47.430
actually see us like making a request for

01:13:47.805 --> 01:13:52.445
the real comments that we'll use. Yeah. So

01:13:52.445 --> 01:13:54.445
this this code's pretty bad. It's just to

01:13:54.445 --> 01:13:57.085
like demonstrate this point that we can render

01:13:57.085 --> 01:14:10.080
stuff like this. Yeah. Like, I guess, I

01:14:10.080 --> 01:14:11.680
don't know if this is what you're saying,

01:14:11.680 --> 01:14:14.405
but we could like take take out this

01:14:14.405 --> 01:14:15.925
like master list of comments, put it in

01:14:15.925 --> 01:14:17.605
feed, and then filter there so that we

01:14:17.605 --> 01:14:21.605
only pass through the correct comments. Yeah. There's

01:14:21.605 --> 01:14:23.605
a lot of ways to do this. I

01:14:23.605 --> 01:14:25.205
think this is how like workshop three starts

01:14:25.205 --> 01:14:27.765
off with the code because it's like less

01:14:27.765 --> 01:14:29.760
work to transition from this to what we

01:14:29.760 --> 01:14:31.840
actually want. So that's just how we did

01:14:31.840 --> 01:14:37.920
it. Yeah. So moving on to step seven.

01:14:41.345 --> 01:14:43.665
I will probably walk through this code because

01:14:43.665 --> 01:14:47.985
it's a shorter step. What we're doing in

01:14:47.985 --> 01:14:50.705
this step is rendering each of the comments

01:14:50.705 --> 01:14:55.425
inside of the comments state to single comment.

01:14:56.180 --> 01:14:57.780
So it's really similar to what we did

01:14:57.780 --> 01:15:00.580
with the feed where we rendered each of

01:15:00.580 --> 01:15:04.180
the stories to a card which eventually got

01:15:04.180 --> 01:15:09.460
rendered into a single story. So I'm first

01:15:09.460 --> 01:15:12.820
going to go to card and I'll import

01:15:12.820 --> 01:15:13.995
a single comment. And I'll import single comment.

01:15:17.035 --> 01:15:19.835
And feel free to feel free to follow

01:15:19.835 --> 01:15:29.610
along. So I've imported single comments which resides

01:15:30.010 --> 01:15:33.930
here, which I'll pull up to the side.

01:15:39.675 --> 01:15:41.915
Okay. Actually, okay. I've done one step for

01:15:41.915 --> 01:15:44.075
you. Do the other two steps. I'll give

01:15:44.075 --> 01:15:52.150
you guys like five minutes. Okay. If you're

01:15:52.150 --> 01:15:55.030
still working, that's fine. Just hit me out.

01:15:57.270 --> 01:16:03.510
Continuing off where we left. Yeah. So we

01:16:03.510 --> 01:16:07.745
imported single comment and like we did in

01:16:07.745 --> 01:16:10.625
feed where we take the story state, which

01:16:10.625 --> 01:16:13.505
is an array, and then call the map

01:16:13.505 --> 01:16:18.465
function to create like a list of components.

01:16:19.600 --> 01:16:21.360
We're gonna do the same thing for the

01:16:21.360 --> 01:16:24.720
comments. And essentially, I'm just gonna, like, I'm

01:16:24.720 --> 01:16:29.760
just gonna copy and paste the code and

01:16:29.760 --> 01:16:32.480
then change all the occurrences of stories with

01:16:32.640 --> 01:17:03.875
comments. Sorry. Okay. I don't know what happened.

01:17:04.515 --> 01:17:07.315
One cool trick is instead of resetting hard,

01:17:07.315 --> 01:17:12.550
can get stash. And then I'm gonna that,

01:17:12.550 --> 01:17:15.190
like, essentially resets the status of your branch.

01:17:15.190 --> 01:17:16.950
I'm gonna check out the next step just

01:17:16.950 --> 01:17:21.270
to cheat a bit. Okay. I'm gonna copy

01:17:21.270 --> 01:17:23.990
that. And then I'll go back to the

01:17:23.990 --> 01:17:27.025
old branch and then get stash pop so

01:17:27.025 --> 01:17:28.945
it like restores the changes that I just

01:17:28.945 --> 01:17:33.985
had. And now I'll just copy paste. Okay.

01:17:34.705 --> 01:17:36.385
So, yeah. I'm doing the same thing as

01:17:36.385 --> 01:17:38.545
I was in feed. The only difference is

01:17:38.545 --> 01:17:42.490
now I'm rendering single comment. The ID is

01:17:44.250 --> 01:17:47.130
the ID prop is gonna be whatever I

01:17:47.130 --> 01:17:51.050
get or like the ID attribute inside the

01:17:51.050 --> 01:17:55.885
objects. The creator name is also gonna be

01:17:55.885 --> 01:17:58.765
found inside the objects, as well as the

01:17:58.765 --> 01:18:04.285
contents. And I guess the parent isn't inside

01:18:04.285 --> 01:18:07.165
there. You don't actually need to know the

01:18:06.360 --> 01:18:12.120
parent for the single comment. So, yeah. Like,

01:18:12.120 --> 01:18:13.640
if we look at the single comment component

01:18:13.640 --> 01:18:16.920
now, we see that it takes in ID,

01:18:16.920 --> 01:18:20.375
creator name, and content as props. Notice that

01:18:20.375 --> 01:18:22.055
this is just a docstring. It doesn't actually

01:18:22.055 --> 01:18:24.055
enforce any of the props that we passed

01:18:24.055 --> 01:18:27.015
in, but it's always good practice to specify

01:18:27.015 --> 01:18:29.415
what props you want each component to receive.

01:18:34.350 --> 01:18:36.510
So now that we've rendered a single comment

01:18:36.510 --> 01:18:41.230
with these props, let me take a look

01:18:41.230 --> 01:18:47.885
at what it looks like here. And, of

01:18:47.885 --> 01:18:51.165
course, instead of instead of rendering the JSON

01:18:51.165 --> 01:18:53.325
stringify version of comments, I'm gonna render a

01:18:53.325 --> 01:19:00.540
comments list. Okay. This bar actually shows up

01:19:00.540 --> 01:19:02.780
inside of single comment, so we're on the

01:19:02.780 --> 01:19:06.540
right track. The last part is just using

01:19:06.540 --> 01:19:08.700
the props that we received from the parent

01:19:09.740 --> 01:19:13.665
and then displaying the text. So on the

01:19:13.665 --> 01:19:22.945
left, I wanna have the creator name. And

01:19:22.945 --> 01:19:27.090
then let me save that. Okay. Cool. So

01:19:27.090 --> 01:19:28.530
the creator name now shows up on the

01:19:28.530 --> 01:19:32.370
left. And then here on the right side,

01:19:33.490 --> 01:19:38.530
I want to render the content of the

01:19:38.530 --> 01:19:44.465
comments. Okay. Yeah. It looks like it worked.

01:19:44.785 --> 01:19:47.185
We have the creator name and then the

01:19:47.185 --> 01:19:51.105
con content of the comment. Let's say I

01:19:51.105 --> 01:19:56.200
create a new post. This also is looking

01:19:56.200 --> 01:19:58.040
good to us because if we don't see

01:19:58.040 --> 01:20:02.760
any comments underneath a story, essentially, if the

01:20:02.760 --> 01:20:08.375
comment state is empty, then it should see

01:20:08.375 --> 01:20:11.255
that the length of the comments list is

01:20:11.255 --> 01:20:13.735
zero, and then return a div that says

01:20:13.735 --> 01:20:17.015
no comments. So that's what's rendered inside of

01:20:17.015 --> 01:20:21.780
this story because There's no comments inside the

01:20:21.780 --> 01:20:31.140
card component that's being rendered here. Okay. That

01:20:31.140 --> 01:20:33.700
concludes it for step seven. Any questions about

01:20:33.700 --> 01:20:43.735
that? Okay. Get reset hard and then check

01:20:43.735 --> 01:20:52.770
out step eight, please. And step eight is

01:20:52.770 --> 01:20:56.610
now gonna be analogous to step four, which

01:20:56.610 --> 01:20:59.010
was adding a new story. Now we're gonna

01:20:59.010 --> 01:21:02.095
be adding a new comment. And this is

01:21:02.095 --> 01:21:03.455
gonna appear instead of at the top of

01:21:03.455 --> 01:21:05.215
the feed. This is gonna appear at the

01:21:05.215 --> 01:21:08.655
bottom of the card component. So when you're

01:21:08.655 --> 01:21:11.375
actually rendering it, I would just put like

01:21:11.375 --> 01:21:13.935
the single or sorry, the new comment component

01:21:13.935 --> 01:21:17.430
down here, and then pass in whatever props

01:21:17.430 --> 01:21:20.390
you need to pass in. So I'll give

01:21:20.390 --> 01:21:24.390
you guys around like seven minutes to do

01:21:24.390 --> 01:21:25.830
this. This is gonna be a bit more

01:21:25.830 --> 01:21:42.020
tricky. Also, just in case, run git status

01:21:42.020 --> 01:21:43.860
in your terminal. And then if you don't

01:21:43.860 --> 01:21:45.780
see that your branch is up to date,

01:21:46.420 --> 01:21:49.540
please git reset hard and then git pull.

01:21:59.765 --> 01:22:03.205
Okay. Let's get moving. I think by now

01:22:03.205 --> 01:22:05.365
you've probably realized that like this all the

01:22:05.365 --> 01:22:07.685
codes actually, you know, getting pretty messy. So

01:22:09.690 --> 01:22:11.610
it's actually kinda hard to like figure out

01:22:11.610 --> 01:22:14.330
where everything should go, how all these props

01:22:14.330 --> 01:22:19.450
and states are passed down. Yeah. So it's

01:22:19.450 --> 01:22:21.925
definitely very understandable if like all the code

01:22:21.925 --> 01:22:25.125
is really confusing. I think it helps a

01:22:25.125 --> 01:22:27.125
lot to get caught up as much as

01:22:27.125 --> 01:22:30.725
you can later today. So that tomorrow when

01:22:30.725 --> 01:22:33.205
we start workshop three, you'll come in at

01:22:33.205 --> 01:22:38.850
least knowing all of the React stuff. Yeah.

01:22:38.850 --> 01:22:43.650
So for step eight, starting in card dot

01:22:44.210 --> 01:22:49.555
JSX, I'm going to import new comment. This

01:22:49.555 --> 01:22:51.875
is a component inside of the new post

01:22:51.875 --> 01:23:03.020
input dot jsx file. Okay. And then over

01:23:03.020 --> 01:23:06.060
here, it's actually better practice to put the

01:23:06.060 --> 01:23:08.380
callback functions and everything else, like, after the

01:23:08.380 --> 01:23:11.020
useEffects. You wanna use useState and then useEffects

01:23:11.020 --> 01:23:14.620
and then everything else. I'll just have it

01:23:14.620 --> 01:23:19.555
up here. I'll refer to feed, which is

01:23:19.555 --> 01:23:22.355
where we did our callback for adding a

01:23:22.355 --> 01:23:25.235
new story. And again, the reason we need

01:23:25.235 --> 01:23:30.355
a callback function is because the actual state

01:23:30.355 --> 01:23:33.715
state setter is defined inside the card component.

01:23:35.290 --> 01:23:42.330
And then when we're passing down all the

01:23:42.330 --> 01:23:43.850
comments are in here. We have our set

01:23:43.850 --> 01:23:47.805
state function also in here. But then underneath

01:23:47.805 --> 01:23:49.485
it in a child component, we're gonna be

01:23:49.485 --> 01:23:51.805
rendering the new post input, or the new

01:23:51.805 --> 01:23:55.405
comments component. So this new comments component doesn't

01:23:55.405 --> 01:23:58.685
actually know what to edit when you press

01:23:58.685 --> 01:24:01.210
submit. That's why you need to somehow pass

01:24:01.210 --> 01:24:04.570
down either the set state function for the

01:24:04.570 --> 01:24:07.210
comments down to the new post input, or

01:24:07.210 --> 01:24:10.330
you pass the callback function down that actually

01:24:10.330 --> 01:24:17.025
runs the set state function. So I'm just

01:24:17.025 --> 01:24:19.905
gonna copy what it looks like over here.

01:24:21.105 --> 01:24:23.025
I'll create a call callback function called add

01:24:23.025 --> 01:24:26.705
new comments, and it takes in a value

01:24:26.705 --> 01:24:31.460
which is supposedly a comment value, and then

01:24:31.460 --> 01:24:36.740
sets the comments to whatever the old value

01:24:36.740 --> 01:24:41.460
was with the new value concatenated to the

01:24:41.460 --> 01:24:45.005
end. Notice that this actually returns a new

01:24:45.005 --> 01:24:48.365
array. In JavaScript dot concat will return a

01:24:48.365 --> 01:24:51.005
new array, but dot push will modify the

01:24:51.005 --> 01:24:55.485
old array. So dot concat is safe here.

01:24:55.950 --> 01:24:57.950
And another way you could you could write

01:24:57.950 --> 01:25:03.790
this, which is actually preferred, is list decomprehension,

01:25:03.790 --> 01:25:08.510
I think. Decompressing that comments into a flattened

01:25:08.510 --> 01:25:11.230
array and then appending value to the end.

01:25:12.215 --> 01:25:14.935
But, yeah, this doesn't matter too much. Once

01:25:14.935 --> 01:25:17.415
we've set our once we've created this callback

01:25:17.415 --> 01:25:23.015
function, now we want to render the new

01:25:23.015 --> 01:25:30.810
post or the new comment component. And I'm

01:25:30.810 --> 01:25:32.970
gonna look at the documentation for new comment

01:25:33.210 --> 01:25:35.290
to see what we wanna call the prop.

01:25:37.770 --> 01:25:42.235
Luckily for us, under new comments, we know

01:25:42.235 --> 01:25:43.595
that we wanna pass on a prop called

01:25:43.595 --> 01:25:48.475
story id, which is equal to the props

01:25:48.475 --> 01:25:53.035
dot id. Essentially, the id that we got

01:25:53.035 --> 01:25:56.800
from the feed for the story, as well

01:25:56.800 --> 01:26:02.480
as the add new comment function, which should

01:26:02.480 --> 01:26:04.800
just be the callback function that we just

01:26:04.880 --> 01:26:13.025
created, also called add new comments. So if

01:26:13.025 --> 01:26:20.065
I render this now does it show up?

01:26:20.705 --> 01:26:26.120
Oh, because it's not rendering anything. Yeah. So

01:26:26.120 --> 01:26:29.000
what I wanna do is render something just

01:26:29.000 --> 01:26:33.400
to see that it's working. I'll just, like,

01:26:34.120 --> 01:26:38.935
do that. Cool. So it's rendering. I know

01:26:38.935 --> 01:26:43.335
that this render is working. And now, what

01:26:43.335 --> 01:26:44.775
I actually wanna render is a new post

01:26:44.775 --> 01:26:48.695
input. And then inside the props for a

01:26:48.695 --> 01:26:51.970
new post input, if I go up here

01:26:51.970 --> 01:26:54.370
to see what it takes in, I see

01:26:54.370 --> 01:26:57.330
that the props name is a story ID

01:26:57.330 --> 01:27:00.210
and then on submit. And we can also

01:27:00.210 --> 01:27:06.135
give a default text value. So default text

01:27:06.135 --> 01:27:09.175
is doesn't really matter too much. I'm just

01:27:09.175 --> 01:27:16.080
gonna say, oh, new comments. And then for

01:27:16.080 --> 01:27:20.160
story ID, notice that this was passed in

01:27:20.160 --> 01:27:22.960
from the new comment from the card dot

01:27:22.960 --> 01:27:26.160
JSX file. When we render the new comment,

01:27:26.160 --> 01:27:28.240
we passed in story ID. So this is

01:27:28.240 --> 01:27:34.735
referenced using props. Story ID, which is the

01:27:34.735 --> 01:27:39.055
name that we're passing here. And then the

01:27:39.695 --> 01:27:42.415
on submit function or the on submit prop

01:27:44.490 --> 01:27:46.250
is gonna be this function that we're gonna

01:27:46.250 --> 01:27:49.050
create here or fully implement here, which is

01:27:49.050 --> 01:27:54.410
add comments. And add comment for now, again,

01:27:54.410 --> 01:27:58.010
same as with the stories, is gonna do

01:27:59.575 --> 01:28:04.215
not much besides adding or calling the the

01:28:04.215 --> 01:28:07.095
callback function that we passed from card and

01:28:07.095 --> 01:28:10.935
then adding this new dummy comments. So the

01:28:10.935 --> 01:28:14.880
content is whatever value was inside the input.

01:28:16.080 --> 01:28:19.920
And then the creator name, anonymous ID, I'm

01:28:19.920 --> 01:28:25.360
just gonna say random comments ID. And also

01:28:26.160 --> 01:28:30.185
for comments, remember that the comments all need

01:28:30.185 --> 01:28:32.665
a parent field, which refers to, like, what

01:28:32.665 --> 01:28:35.945
their parent's ID is. So when I create

01:28:35.945 --> 01:28:39.065
a new comments, I also want to have

01:28:39.465 --> 01:28:42.850
this parent field. And how do I know

01:28:42.850 --> 01:28:45.090
what parent it has? Well, it was passed

01:28:45.090 --> 01:28:47.090
all the way down as a prop called

01:28:47.090 --> 01:28:53.250
story ID. So with this, this looks like

01:28:53.250 --> 01:28:55.010
a pretty good new comment. I have the

01:28:55.010 --> 01:28:57.675
value of the text box, the story that

01:28:57.675 --> 01:29:01.035
it falls under, my name, anonymous user, as

01:29:01.035 --> 01:29:03.275
well as some random ID for the comment.

01:29:04.155 --> 01:29:07.115
And if I now try to type something,

01:29:14.310 --> 01:29:17.670
I forgot to say props.story ID. But if

01:29:17.670 --> 01:29:19.750
I now try to type something and then

01:29:19.750 --> 01:29:28.165
press submit. Changing this to add new comments.

01:29:31.205 --> 01:29:32.805
It should work now, and I can add

01:29:32.805 --> 01:29:41.760
new comments using this input. Okay. Yeah. Any

01:29:41.760 --> 01:29:50.455
questions about this? As homework or practice or

01:29:50.455 --> 01:29:55.895
whatever, step nine is not too difficult. It's

01:29:56.615 --> 01:29:58.615
taking like our old component tree where we

01:29:58.615 --> 01:30:01.960
have the single story, single comment, and the

01:30:01.960 --> 01:30:05.560
new comment inside the card component. And then

01:30:05.560 --> 01:30:08.440
combining the like these last two parts into

01:30:08.440 --> 01:30:10.840
one single component. So that way it's like

01:30:10.840 --> 01:30:13.640
more organized. We have the single or we

01:30:13.640 --> 01:30:15.240
have the story with its own component, and

01:30:15.240 --> 01:30:16.440
then we have the comments with its own

01:30:16.440 --> 01:30:19.505
component instead of having a story component, comments

01:30:19.505 --> 01:30:23.265
component, comments component. This is just messier. So

01:30:23.265 --> 01:30:26.385
step nine is just doing that, combining it

01:30:26.385 --> 01:30:31.760
into a single comments block component. And then

01:30:31.760 --> 01:30:34.400
you can check out the completed code at

01:30:38.160 --> 01:30:48.275
w two completes. Okay. This is probably one

01:30:48.275 --> 01:30:51.155
of the most intense workshops slash lectures so

01:30:51.155 --> 01:30:54.675
far. I definitely recommend going through it again

01:30:54.675 --> 01:30:57.555
at home if you can. We have office

01:30:57.555 --> 01:31:00.360
hours which are super, super, super helpful. All

01:31:00.360 --> 01:31:03.000
of us are really, really we really wanna

01:31:03.000 --> 01:31:05.720
help you understand this content because moving forward,

01:31:06.600 --> 01:31:09.000
we're gonna be going quite fast, especially with

01:31:09.400 --> 01:31:12.440
servers coming up in the next lecture. So

01:31:12.440 --> 01:31:15.295
if you can nail down a solid understanding

01:31:15.295 --> 01:31:17.775
of React as quick as possible, that's gonna

01:31:17.775 --> 01:31:20.495
make your life a lot easier in the

01:31:20.495 --> 01:31:22.815
next few lectures. So, yeah, please come to

01:31:22.815 --> 01:31:25.695
office hours. If even if you're, like, not

01:31:25.695 --> 01:31:29.080
even, like, a % sure, if you're 90%

01:31:29.080 --> 01:31:31.720
sure about something, still pull up. We'll help

01:31:31.720 --> 01:31:35.960
you get reach that 100% and hopefully that'll

01:31:35.960 --> 01:31:43.055
improve your experience in the class. Yes. Also,

01:31:43.055 --> 01:31:47.535
fill out the feedback form at weblab.isfeedback. If

01:31:47.535 --> 01:31:49.055
you didn't fill that out for the first

01:31:49.055 --> 01:31:51.135
lecture, if you could do that too, that'd

01:31:51.135 --> 01:31:51.775
be great. Thanks.
