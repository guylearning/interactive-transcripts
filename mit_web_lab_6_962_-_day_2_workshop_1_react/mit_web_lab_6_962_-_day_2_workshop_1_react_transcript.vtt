WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: fd80e033-fdfa-4521-8a6a-7c1e30c05d49
Created: 2025-05-15T20:10:33.826Z
Duration: 4061.675
Channels: 1

00:00:00.000 --> 00:00:02.640
Okay. We're gonna go ahead and start with

00:00:02.640 --> 00:00:08.080
the second workshop. I'll let everyone find their

00:00:08.080 --> 00:00:18.095
seats. Finish up eating. Alright. I'll go ahead

00:00:18.095 --> 00:00:20.975
and start. So earlier today, we told you

00:00:20.975 --> 00:00:23.455
a lot about React and how it'll help

00:00:23.455 --> 00:00:25.695
a lot with your projects once you get

00:00:25.695 --> 00:00:29.650
into, like, really complex design. Specifically, it helps

00:00:29.650 --> 00:00:33.010
with abstraction and usability. Let's do a quick

00:00:33.010 --> 00:00:38.130
recap. The idea of React is that you

00:00:38.130 --> 00:00:41.330
can break down your UI into modular components

00:00:41.330 --> 00:00:44.415
that you'll be able to reuse and call

00:00:44.415 --> 00:00:46.095
with ease without having to write out the

00:00:46.095 --> 00:00:49.055
entire thing. Each component takes in a prop

00:00:49.775 --> 00:00:52.415
and it manages its own state. And they

00:00:52.415 --> 00:00:55.535
have their own, like, various uses and times

00:00:55.855 --> 00:00:59.550
where they're helpful. And all the components will

00:00:59.550 --> 00:01:03.230
interact with each other through parent child relations.

00:01:04.110 --> 00:01:06.670
Props will pass from parent to children, never

00:01:06.670 --> 00:01:08.990
the other way around, and you can think

00:01:08.990 --> 00:01:18.395
of the structure like a tree. So ultimately,

00:01:18.395 --> 00:01:21.915
the idea is that once we have our

00:01:21.915 --> 00:01:23.835
components, all we need to do at the

00:01:23.835 --> 00:01:26.155
end is just link them together, passing down

00:01:26.155 --> 00:01:29.540
the appropriate props. And then at the very

00:01:29.540 --> 00:01:31.060
end, all we'll need to do is just

00:01:31.060 --> 00:01:33.540
instantiate our app element, and that'll contain our

00:01:33.540 --> 00:01:40.100
entire web page. So we did this before

00:01:40.100 --> 00:01:42.100
with Facebook, but let's try to break down

00:01:42.100 --> 00:01:46.315
another website into its components, following the componentry.

00:01:46.875 --> 00:01:48.875
As always, we're gonna start with the root,

00:01:49.435 --> 00:01:52.555
and that's the app elements, as always. Within

00:01:52.555 --> 00:01:54.955
that, we'll have direct children of the app,

00:01:55.355 --> 00:01:57.780
and these are things like nav bar, or

00:01:57.780 --> 00:02:00.340
bigger components like an entire feed, or a

00:02:00.340 --> 00:02:07.540
trending tab, and more suggestions. Within all these

00:02:07.540 --> 00:02:12.605
components, you might have smaller child components, such

00:02:12.605 --> 00:02:17.165
as tweets or specific profiles to be put

00:02:17.165 --> 00:02:19.565
in the who to follow tab, or maybe

00:02:19.565 --> 00:02:24.760
articles in the trending tab as well. And

00:02:24.760 --> 00:02:29.560
furthermore, there's components like search bars and little

00:02:29.560 --> 00:02:31.720
gadgets on each of the posts as well.

00:02:37.785 --> 00:02:40.505
To refresh you on props, props are information

00:02:40.505 --> 00:02:42.665
that will be passed from parent to child,

00:02:43.225 --> 00:02:47.145
and they're passed in the following manner. Post

00:02:48.150 --> 00:02:50.230
element will take in the props name and

00:02:50.230 --> 00:02:52.470
text, and you do that by adding the

00:02:52.470 --> 00:02:54.230
attributes for name and text, and then setting

00:02:54.230 --> 00:02:58.070
those to the appropriate value. And then what

00:02:58.070 --> 00:03:02.065
React interprets that as is giving a JavaScript

00:03:02.065 --> 00:03:05.665
object to the component that looks like what

00:03:05.665 --> 00:03:13.505
I have up there. The other important concept

00:03:13.350 --> 00:03:15.750
is state. And these are pieces of information

00:03:15.750 --> 00:03:19.110
that are updatable. So if you'll remember, props

00:03:19.110 --> 00:03:21.270
can't be changed by the component themselves. They

00:03:21.270 --> 00:03:23.350
can only be changed by a parent component.

00:03:23.590 --> 00:03:25.910
But with state, you can maintain that within

00:03:25.910 --> 00:03:28.070
the component. So this is very helpful for

00:03:28.070 --> 00:03:30.975
things like an is liked, as we showed

00:03:30.975 --> 00:03:34.495
you a couple times before, or status, or

00:03:35.055 --> 00:03:37.135
if there's a user, then maybe you want

00:03:37.135 --> 00:03:39.535
to say if it's online or not, things

00:03:39.535 --> 00:03:45.980
like that. So let's directly construct the component

00:03:45.980 --> 00:03:48.140
tree. As I showed you before, we start

00:03:48.140 --> 00:03:51.020
with our app. And then we have some

00:03:51.020 --> 00:03:58.315
direct children. And then within those, we have

00:03:58.395 --> 00:04:04.795
further sub children. For example, tweets, profiles. If

00:04:04.795 --> 00:04:11.290
we started at top level, we have all

00:04:11.290 --> 00:04:17.130
the children directly instantiated. Let's follow down the

00:04:17.130 --> 00:04:22.095
path of one of these components. So if

00:04:22.095 --> 00:04:27.535
you look at the feed component, since we're

00:04:27.535 --> 00:04:31.535
not getting any props passed in from app,

00:04:31.935 --> 00:04:34.895
we'll directly get the information that we need

00:04:35.220 --> 00:04:39.140
and store it as a state. So in

00:04:39.140 --> 00:04:40.740
this case, our state is going be tweet

00:04:40.740 --> 00:04:43.780
data, and it's going to be loaded from

00:04:43.780 --> 00:04:46.500
some API. And we'll touch on that later

00:04:46.500 --> 00:04:48.955
in the course. But all you need to

00:04:48.955 --> 00:04:51.275
know is that it's maintained by this component

00:04:51.835 --> 00:04:54.715
and not one above it or below it.

00:04:56.075 --> 00:04:59.115
And we'll use that state setter so that

00:04:59.115 --> 00:05:01.755
we can load up the data into this

00:05:01.755 --> 00:05:07.470
variable here. Then within our return, we have

00:05:07.470 --> 00:05:09.710
to render this. And for that, we're going

00:05:09.710 --> 00:05:11.710
to be instantiating tweet components, and these are

00:05:11.710 --> 00:05:15.150
subchildren of the feed component. And in those

00:05:15.150 --> 00:05:19.195
tweet components, we have props passed down. So

00:05:19.195 --> 00:05:21.595
in this case, it's username and maybe some

00:05:21.595 --> 00:05:23.355
more stuff like the content of the actual

00:05:23.355 --> 00:05:27.995
tweet. So let's see what that looks like

00:05:28.155 --> 00:05:31.435
in the child component. Because we passed down

00:05:31.435 --> 00:05:35.240
props, we need to let React know that.

00:05:35.320 --> 00:05:37.400
So props are passed in, and then we

00:05:37.400 --> 00:05:41.160
can easily unpack those props by using dot.

00:05:48.495 --> 00:05:50.815
Pause for a moment because that was a

00:05:50.815 --> 00:05:53.135
pretty quick review, and you guys just learned

00:05:53.135 --> 00:06:04.070
it today. Okay, so final recap. A React

00:06:04.070 --> 00:06:08.070
component is basically a bundle of JavaScript logic

00:06:08.070 --> 00:06:11.190
and HTML rendering that lets you reuse a

00:06:11.190 --> 00:06:12.390
piece of code that you don't want to

00:06:12.390 --> 00:06:15.045
keep writing over and over again. A component

00:06:15.045 --> 00:06:19.445
can be represented as a piece of HTML

00:06:19.445 --> 00:06:21.765
code or a bunch of other React components

00:06:21.765 --> 00:06:25.765
stringed together. It can receive information through props

00:06:25.765 --> 00:06:29.390
and maintain its own information through state. And

00:06:29.390 --> 00:06:31.470
these components all interact with each other using

00:06:31.470 --> 00:06:36.750
a tree structure. I've linked the React guide

00:06:36.830 --> 00:06:39.470
again, and I encourage you to check it

00:06:39.470 --> 00:06:41.725
out because of this stuff is a little

00:06:41.725 --> 00:06:43.645
hard to grasp at first. But it's important

00:06:43.645 --> 00:06:45.485
that you get it because you're gonna be

00:06:45.645 --> 00:06:56.220
constructing your entire project using React. Alright. I'll

00:06:56.220 --> 00:06:58.620
pause for any questions before we jump into

00:06:58.620 --> 00:07:11.575
the workshop. Okay. Then we'll go ahead and

00:07:11.575 --> 00:07:14.535
start. So as we did with the first

00:07:14.535 --> 00:07:17.095
workshop, we're gonna be using Versus Code, or

00:07:17.095 --> 00:07:20.055
maybe your terminal as well. So I'll give

00:07:20.055 --> 00:07:22.910
everyone a moment to get that real quick.

00:07:28.030 --> 00:07:30.030
Our end goal for this workshop is going

00:07:30.030 --> 00:07:34.270
to be to convert what we had from

00:07:34.270 --> 00:07:40.305
the last workshop into a React web page,

00:07:40.465 --> 00:07:43.505
and then add a few more components on

00:07:43.505 --> 00:07:45.265
here that'll use our concepts of props and

00:07:45.265 --> 00:07:58.000
state. Alright. Once everyone has got Versus Code

00:07:58.000 --> 00:08:01.120
up, we have a few more setup steps,

00:08:04.785 --> 00:08:09.185
which I'll get into right now. So yesterday,

00:08:09.185 --> 00:08:12.385
we mentioned a little bit about Node. So

00:08:12.385 --> 00:08:15.025
Node is gonna be how we can develop

00:08:15.025 --> 00:08:18.490
using JavaScript in our browser. And I think

00:08:18.490 --> 00:08:21.530
this was in the setup instructions, but everyone

00:08:21.530 --> 00:08:24.890
should have downloaded Node as well as NPM.

00:08:25.290 --> 00:08:27.450
So before we move on, we're just going

00:08:27.450 --> 00:08:30.010
to make sure that we all have the

00:08:30.010 --> 00:08:35.705
right version of Node. And you can do

00:08:35.705 --> 00:08:37.625
this easily by typing in node dash v

00:08:37.625 --> 00:08:41.145
into your terminal. And anything that's version 18

00:08:41.145 --> 00:08:43.065
plus should be good. I think the latest

00:08:43.065 --> 00:08:45.065
is version 20. So if you have that,

00:08:45.065 --> 00:08:57.300
that's good as well. Alright. Good to move

00:08:57.300 --> 00:09:00.100
on? If you're ever getting in trouble, then

00:09:00.100 --> 00:09:01.780
always remember to just join the queue and

00:09:01.780 --> 00:09:08.475
someone can help you. Once we verify that

00:09:08.475 --> 00:09:11.515
we have Node, we're going to open up

00:09:11.515 --> 00:09:14.235
the Catbook React folder from last time, open

00:09:14.235 --> 00:09:16.795
up the terminal window in Versus Code or

00:09:16.795 --> 00:09:28.510
elsewhere, and then run the following commands. So

00:09:28.510 --> 00:09:32.695
I already have it up here. But once

00:09:32.695 --> 00:09:34.775
you get there, you should get something that

00:09:34.775 --> 00:09:43.655
looks like this. And also make sure that

00:09:43.655 --> 00:09:46.610
you navigate to the folder correctly. So you

00:09:46.610 --> 00:10:35.955
should see, like, Catbook React. Alright. I'll give

00:10:35.955 --> 00:10:38.595
everyone like one more minute to get this

00:10:38.595 --> 00:10:43.660
done. And once again, if you're having any

00:10:43.660 --> 00:10:45.420
trouble, then just join the queue and someone

00:10:45.420 --> 00:11:03.965
can help you. Okay. Let's first talk about

00:11:03.965 --> 00:11:07.245
the componentry for our Catbook. As always, we're

00:11:07.245 --> 00:11:09.760
gonna start with app as the root. And

00:11:09.760 --> 00:11:11.680
within that, we're only gonna have two components

00:11:11.680 --> 00:11:13.600
today. We'll have the nav bar at the

00:11:13.600 --> 00:11:16.000
top and then the profile page, as you

00:11:16.000 --> 00:11:19.360
can see. Within the profile, we're also gonna

00:11:19.360 --> 00:11:22.480
have this funny component called cat happiness, and

00:11:22.480 --> 00:11:24.000
we'll let you know what that does in

00:11:24.000 --> 00:11:26.215
a bit. It's basically just gonna be like

00:11:26.215 --> 00:11:28.695
this dumb counter that counts how many times

00:11:28.695 --> 00:11:37.980
you've clicked the profile picture. Yeah, here are

00:11:37.980 --> 00:11:42.700
the components highlighted. There's the cat happiness component.

00:11:45.340 --> 00:11:47.420
So you'll notice that the starter code for

00:11:47.420 --> 00:11:49.580
today is a little bit more complex than

00:11:49.580 --> 00:11:55.615
it was last time. To get everything, like,

00:11:56.095 --> 00:12:05.055
situated, let's open up the client folder. So

00:12:05.215 --> 00:12:10.620
if you're in Versus Code, on client. And

00:12:10.620 --> 00:12:17.820
you're gonna wanna look at source, SRC. And

00:12:17.820 --> 00:12:21.180
then within that, there's also components. And this

00:12:21.180 --> 00:12:23.555
is gonna have all of our components laid

00:12:23.555 --> 00:12:37.920
out. So within this components folder, you'll see

00:12:37.920 --> 00:12:40.560
that first we have just the plain app

00:12:40.560 --> 00:12:45.040
component. And this is just as simple as

00:12:45.040 --> 00:12:47.600
I described before. It's basically just the nav

00:12:47.600 --> 00:12:52.985
bar and then the profile. We also have

00:12:52.985 --> 00:12:54.665
a folder for the rest of our modules

00:12:54.905 --> 00:13:01.065
and pages. So pages is gonna include things

00:13:01.065 --> 00:13:04.105
like profile. So they're fully formed pages that

00:13:04.105 --> 00:13:08.730
are a little bit more complicated. And then

00:13:08.730 --> 00:13:11.210
the components that will instantiate into these pages,

00:13:11.530 --> 00:13:28.675
such as navbar or cat happiness. And the

00:13:28.675 --> 00:13:30.915
only ones that we're gonna modify today are

00:13:31.155 --> 00:13:34.640
profile, navbar, and cat happiness. So you won't

00:13:34.640 --> 00:13:44.240
need to worry about the app JSX. Okay.

00:13:44.240 --> 00:13:46.400
I mentioned this before, but make sure that

00:13:46.400 --> 00:13:50.005
when you're doing styling on React components, use

00:13:50.005 --> 00:13:52.325
class name instead of class. And this is

00:13:52.325 --> 00:13:54.965
because class is already, like, a special word

00:13:54.965 --> 00:13:58.325
in JavaScript, so we have to use class

00:13:58.325 --> 00:14:02.530
name instead. Also, good practice is every time

00:14:02.530 --> 00:14:06.210
you're creating a class for CSS, you should

00:14:06.210 --> 00:14:10.850
put the component name before, like, a more

00:14:10.850 --> 00:14:15.995
specific descriptor. And, like, of course, this is

00:14:15.995 --> 00:14:19.035
just helpful for, like, reading through your code.

00:14:19.355 --> 00:14:21.675
But it's also important because CSS applies to

00:14:21.675 --> 00:14:23.035
the entire web page, so you don't want

00:14:23.035 --> 00:14:27.115
to, like, mix together styling for components that,

00:14:27.115 --> 00:14:28.955
like, have similar functions but are, like, actually,

00:14:30.640 --> 00:14:42.480
like, related to different components. So today, instead

00:14:42.480 --> 00:14:45.945
of dragging out the file and just, like,

00:14:45.945 --> 00:14:48.345
pasting it in your browser, we have a

00:14:48.345 --> 00:14:54.425
different command for running your page, and I'll

00:14:54.425 --> 00:14:56.585
let you guys all try it out. It's

00:14:56.585 --> 00:15:02.010
gonna be npm run dev, and it'll spit

00:15:02.010 --> 00:15:04.970
out this thing here. And all you need

00:15:04.970 --> 00:15:09.370
to do is copy this, and then you

00:15:09.370 --> 00:15:13.455
can go to your browser, and then paste

00:15:13.455 --> 00:15:14.735
it in, and then it should have your

00:15:14.735 --> 00:15:36.370
website. I'll let everyone try that for a

00:15:36.370 --> 00:15:50.965
moment before we move on. By the way,

00:15:57.740 --> 00:15:59.500
Oh, and if you're using Versus Code and

00:15:59.500 --> 00:16:01.180
you'd like to open up another terminal while

00:16:01.180 --> 00:16:03.980
this is running, you can press this button

00:16:03.980 --> 00:16:07.340
here, and it'll create another one you can

00:16:07.340 --> 00:16:22.095
use. Okay. Sounds like there's still some trouble

00:16:22.095 --> 00:16:24.670
with the setup, so I'll stop for like

00:16:24.670 --> 00:17:11.035
two minutes before I move on. Oh, oops.

00:17:11.835 --> 00:17:14.875
Okay. I there's this typo on the slides.

00:17:14.875 --> 00:17:17.820
It should be 5173 and not 5137. Sorry.

00:18:08.215 --> 00:18:11.975
Okay. Sounds like we're kind of on track

00:18:11.975 --> 00:18:14.215
now. So I'll go ahead and move on.

00:18:18.460 --> 00:18:21.420
We have three steps for today's workshop, and

00:18:21.420 --> 00:18:22.940
the first one is going be just implement

00:18:22.940 --> 00:18:27.740
the nav bar. Before we do that, make

00:18:27.740 --> 00:18:29.500
sure you run these commands. I think I

00:18:29.500 --> 00:18:31.335
already had you run them, but just in

00:18:31.335 --> 00:18:41.015
case, we're starting on the same page. This

00:18:41.015 --> 00:18:42.615
nav bar is gonna be pretty similar to

00:18:42.615 --> 00:18:44.455
the one that we did in the workshop

00:18:44.455 --> 00:18:51.380
yesterday. But today, we're going to have to

00:18:51.380 --> 00:18:54.980
do it using the syntax of React. So

00:18:54.980 --> 00:18:58.580
remember that when you have a React component,

00:18:58.740 --> 00:19:01.140
whatever you render is going be within these

00:19:01.140 --> 00:19:12.675
return parentheses. If you remember our old code,

00:19:15.560 --> 00:19:18.360
our nav bar was pretty simple. We just

00:19:18.360 --> 00:19:22.040
had this nav container here, and then within

00:19:22.040 --> 00:19:23.800
that we had a title with some more

00:19:23.800 --> 00:19:29.015
styling on it. And it's gonna be a

00:19:29.015 --> 00:19:33.815
very similar thing here. And then, of course,

00:19:33.815 --> 00:19:35.255
we also need to style our nav bar,

00:19:40.550 --> 00:19:42.790
which we also did in the last workshop.

00:19:43.190 --> 00:19:44.550
So I'll let you get the hang of

00:19:44.550 --> 00:19:48.550
doing that here as well. Also, something that

00:19:48.550 --> 00:19:51.190
we didn't mention in the lecture was how

00:19:51.190 --> 00:19:54.230
to link CSS style sheets into React components.

00:19:54.885 --> 00:19:56.805
You do that by using this import line

00:19:56.805 --> 00:20:13.460
here, and then you'll import this path. If

00:20:13.460 --> 00:20:16.180
you're ever unsure, like, which path to import,

00:20:16.260 --> 00:20:20.660
you can right click onto the CSS file,

00:20:20.660 --> 00:20:23.860
copy, like, the relative path, and then or

00:20:23.860 --> 00:20:28.315
wait. No. Not the relative path. Copy the

00:20:28.315 --> 00:20:31.675
path and then just do that as well.

00:20:32.795 --> 00:20:35.835
But if you know that your component is,

00:20:35.835 --> 00:20:37.435
like, already in the same directory, then you

00:20:37.435 --> 00:20:40.010
can just do something like this. Remember dot

00:20:40.010 --> 00:20:42.490
means it's in the same directory. And then

00:20:42.490 --> 00:21:05.750
within there, the file is right there. I'll

00:21:05.750 --> 00:21:09.030
give everyone, like, two minutes to reimplement the

00:21:09.030 --> 00:21:17.590
nav bar in React. You can use whatever

00:21:17.590 --> 00:21:20.685
class names that you'd like. Just make sure

00:21:20.685 --> 00:21:23.565
to keep it, like, somewhat reasonable. And you

00:21:23.565 --> 00:21:25.405
can add whatever styling you'd like in CSS

00:21:25.405 --> 00:21:53.725
as well. Okay. I'm gonna go ahead and

00:21:53.725 --> 00:21:58.045
start solving it with you guys. So the

00:21:58.045 --> 00:22:01.245
first part of this is just putting in

00:22:00.270 --> 00:22:05.310
the HTML code into our return. So instead

00:22:05.310 --> 00:22:10.030
of null, we're going to have this nav

00:22:10.030 --> 00:22:16.345
bar, and then we're gonna have more stuff

00:22:16.345 --> 00:22:24.105
inside here for the title. We're also gonna

00:22:24.105 --> 00:22:26.265
add styling, so we want to add class

00:22:26.265 --> 00:22:31.280
name, not class, and then name it something

00:22:33.680 --> 00:22:37.280
that describes what it does well. Again, see

00:22:37.280 --> 00:22:40.480
that I'm using the component name before I

00:22:40.480 --> 00:22:49.055
put the descriptor? And then for this one

00:22:49.055 --> 00:23:07.230
as well, some styling on it. Alright. I'll

00:23:07.230 --> 00:23:12.255
let everyone get up to this part for

00:23:12.255 --> 00:23:27.070
a minute. Okay. The next part is to

00:23:27.070 --> 00:23:30.190
apply the styling. So for that, we're gonna

00:23:30.190 --> 00:23:33.230
open up our CSS style sheet for Navbar.

00:23:35.870 --> 00:23:37.470
And then depending on the class names that

00:23:37.470 --> 00:24:10.885
you used, we'll select and then apply. Oh,

00:24:11.045 --> 00:24:18.085
okay. I think I forgot something. Yeah. We'd

00:24:18.085 --> 00:24:19.605
like to keep using the same variables that

00:24:19.605 --> 00:24:23.070
we defined earlier. So if we open up

00:24:23.070 --> 00:24:25.150
our old style CSS, we can just copy

00:24:25.150 --> 00:24:31.550
paste that. And that'll allow us to use

00:24:31.550 --> 00:24:41.925
the variables that we have before. And feel

00:24:41.925 --> 00:24:43.285
free to change the colors if you don't

00:24:43.285 --> 00:25:01.870
like our blue. I'll also put styling to

00:25:01.870 --> 00:26:00.425
this one. If you still have your, local

00:26:00.425 --> 00:26:03.785
host port up, it should auto update and

00:26:03.785 --> 00:26:25.685
you can see the nav bar. Give everyone,

00:26:25.685 --> 00:26:27.605
like, one more minute to get to this

00:26:27.605 --> 00:26:30.005
part, and then move on to the next

00:26:30.005 --> 00:26:44.830
step. And again, your, website should look something

00:26:44.830 --> 00:27:11.870
like this. Okay. Okay. So that was the

00:27:11.870 --> 00:27:13.870
first step. I'll pass it on to Abby

00:27:13.870 --> 00:27:18.270
from here. But, in case you fell behind

00:27:18.270 --> 00:27:20.565
a little bit, you can always just get

00:27:20.565 --> 00:27:23.125
reset dash dash hard and then check out

00:27:23.205 --> 00:27:32.950
to step one. Alright. This is about the

00:27:32.950 --> 00:27:35.750
halfway point of the workshop. Everyone, stand up.

00:27:36.950 --> 00:27:39.030
We're not doing another Wassa challenge. Don't worry.

00:27:39.030 --> 00:28:07.710
This is quick. Let me get a little

00:28:07.710 --> 00:28:11.630
jogging place going. Gotta get that blood flowing,

00:28:11.630 --> 00:28:18.635
otherwise, we're gonna fall asleep. Oh, should not

00:28:18.635 --> 00:28:26.555
be displaying. Okay. Good. We're good. You're good.

00:28:29.115 --> 00:28:38.000
What is your screen showing as paused? I

00:28:38.000 --> 00:28:44.080
don't know. Okay. Let's just try presenting again.

00:28:44.080 --> 00:28:54.875
See what happens. Yeah. Can you wait. Can

00:28:56.235 --> 00:29:03.400
okay. Sure. That works. Cool. Alright, everyone. We

00:29:03.400 --> 00:29:06.120
are going to keep plowing ahead, just like

00:29:06.120 --> 00:29:08.200
two more steps in this workshop, and then

00:29:08.200 --> 00:29:09.960
we'll take like a more legit bio break.

00:29:11.175 --> 00:29:12.615
So the next step is to add the

00:29:12.615 --> 00:29:17.735
cat happiness component. So basically, what we had

00:29:17.735 --> 00:29:20.695
before was our profile page that did not

00:29:20.695 --> 00:29:23.255
have this cat happiness component in the middle.

00:29:23.255 --> 00:29:25.250
It just had about me, my favorite type

00:29:25.250 --> 00:29:27.410
of cat. But now, we want our component

00:29:27.410 --> 00:29:28.930
tree to look like this, where we have

00:29:28.930 --> 00:29:31.810
profile and then the cat happiness component within

00:29:31.810 --> 00:29:35.250
the profile. And then we also wanna state

00:29:35.250 --> 00:29:38.770
that stores our cat happiness. Because if you

00:29:38.770 --> 00:29:43.005
notice, if I go to, I'll go to

00:29:43.005 --> 00:29:48.125
weblab.is/example in order to see what this should

00:29:48.125 --> 00:29:51.805
look like. And then if I go to

00:29:51.805 --> 00:29:54.685
my profile page, what we want is this

00:29:54.685 --> 00:29:57.700
functionality where I can click click the profile

00:29:57.700 --> 00:29:59.860
picture, this little corgi boy, and then my

00:29:59.860 --> 00:30:01.780
cat happiness increments, and I can just spam

00:30:01.780 --> 00:30:03.380
it all I want. And it's like cookie

00:30:03.380 --> 00:30:05.780
clicker, except without the weird functionality to, like,

00:30:05.780 --> 00:30:09.380
hire grandmas to make cookies for you. So

00:30:08.915 --> 00:30:12.275
this is what we want. And we want

00:30:12.275 --> 00:30:13.955
this cat happiness to be stored as a

00:30:13.955 --> 00:30:16.995
number, and that will be stored somewhere on

00:30:16.995 --> 00:30:18.675
this web page because obviously, it has to

00:30:18.675 --> 00:30:20.435
keep track of how many clicks I've made

00:30:20.435 --> 00:30:24.460
so far. So that's a good candidate for

00:30:24.460 --> 00:30:27.820
React state. But the question that we're asking

00:30:27.820 --> 00:30:30.460
now is which component should we store the

00:30:30.460 --> 00:30:33.020
cat happiness state in? Because remember that React

00:30:33.020 --> 00:30:35.820
state is something that a component maintains. We

00:30:35.820 --> 00:30:38.195
store it inside one of our components. So

00:30:38.195 --> 00:30:40.035
the question is, which one of these components

00:30:40.035 --> 00:30:42.435
should we store the state in? Think about

00:30:42.435 --> 00:30:43.875
it for a sec, turn and talk to

00:30:43.875 --> 00:30:46.675
someone nearby you, which component you think it

00:30:46.675 --> 00:31:15.145
should be. Alright, I'm gonna pull us back

00:31:15.145 --> 00:31:18.185
together. Raise your hand if you think it

00:31:18.185 --> 00:31:22.750
should be stored in app. Okay. Raise your

00:31:22.750 --> 00:31:23.550
hand if you think it should be stored

00:31:23.550 --> 00:31:26.510
in nav bar. Now raise your hand if

00:31:26.510 --> 00:31:28.030
you think it should be stored in profile.

00:31:28.270 --> 00:31:31.230
Okay. Some hands. Raise your hand if you

00:31:31.230 --> 00:31:32.670
think it should be stored in cat happiness.

00:31:34.045 --> 00:31:37.725
Also some hands. Okay. So it's probably either

00:31:37.725 --> 00:31:40.365
profile or cat happiness. The correct answer to

00:31:40.365 --> 00:31:43.885
this is profile. So we don't wanna store

00:31:43.885 --> 00:31:46.205
it inside that little box for the cat

00:31:46.205 --> 00:31:48.830
happiness, and why is that? Well, if we

00:31:48.830 --> 00:31:51.390
wanna update the cat happiness when we click

00:31:51.390 --> 00:31:54.670
this button, this cat happiness component is just

00:31:54.670 --> 00:31:56.510
this little box here. This has no way

00:31:56.510 --> 00:31:58.910
of knowing when I've clicked the profile picture.

00:31:59.150 --> 00:32:00.750
So the only component that will be able

00:32:00.750 --> 00:32:02.990
to know when I've clicked this profile picture

00:32:03.070 --> 00:32:05.125
is the component that the profile picture is

00:32:05.125 --> 00:32:08.885
in. That's profile. And so only profile will

00:32:08.885 --> 00:32:12.565
be able to, respond to when I click

00:32:12.565 --> 00:32:15.765
this image. And then what we can do

00:32:15.765 --> 00:32:17.445
is we can take that state that's stored

00:32:17.445 --> 00:32:20.210
in profile and pass it down into our

00:32:20.210 --> 00:32:22.850
cat happiness component as a prop. That way,

00:32:22.850 --> 00:32:25.730
cat happiness can display the number of the

00:32:25.730 --> 00:32:28.450
state that we stored in profile. Any questions

00:32:28.450 --> 00:32:51.920
on this? Yeah. What's up? In that case,

00:32:51.920 --> 00:32:54.240
we would probably just pull the state up

00:32:54.240 --> 00:32:57.360
into whatever highest level component we need it

00:32:57.360 --> 00:32:59.895
to be in. So we might pull the

00:32:59.895 --> 00:33:03.495
state into app and then pass the function

00:33:03.895 --> 00:33:11.255
into navbar. Okay. So like I mentioned earlier,

00:33:11.430 --> 00:33:13.590
profile, this component, is going to have no

00:33:13.590 --> 00:33:16.470
props and a state of cat happiness. And

00:33:16.470 --> 00:33:18.790
then that cat happiness state is going to

00:33:18.790 --> 00:33:21.190
be passed down into the cat happiness component,

00:33:21.190 --> 00:33:23.670
that's this little box here that just displays

00:33:23.445 --> 00:33:26.245
that number as a prop. And that way,

00:33:26.245 --> 00:33:29.045
cat happiness, the box component, can display that

00:33:29.045 --> 00:33:35.765
number. So how do we add state to

00:33:35.765 --> 00:33:38.350
a component? We looked at the syntax earlier,

00:33:38.350 --> 00:33:40.430
but we'll review it. We use the syntax

00:33:40.430 --> 00:33:42.990
const and then whatever the state we want

00:33:42.990 --> 00:33:45.150
to be, in this case, cat happiness, and

00:33:45.150 --> 00:33:47.790
then a setter function for it is equal

00:33:47.790 --> 00:33:50.270
to use state. And then inside the use

00:33:50.270 --> 00:33:52.590
state, the parentheses, we put the default value.

00:33:54.705 --> 00:33:56.305
Later on, we'll talk about a little bit

00:33:56.305 --> 00:33:58.945
more about what use state is and why

00:33:58.945 --> 00:34:01.345
we wanna do this as opposed to just

00:34:01.345 --> 00:34:03.585
using a regular variable. But for now, just

00:34:03.585 --> 00:34:05.185
remember that this is the syntax that we

00:34:05.185 --> 00:34:10.080
use. Alright. So let's get on the same

00:34:10.080 --> 00:34:12.480
page for step one. Just a quick note,

00:34:12.480 --> 00:34:14.480
make sure that whenever you're doing these workshop

00:34:14.480 --> 00:34:16.480
steps, you save or close out of any

00:34:16.480 --> 00:34:18.880
unsaved files. If your tabs in Versus Code

00:34:18.880 --> 00:34:20.575
look like this with a little white dot

00:34:20.575 --> 00:34:22.335
in it, that means you have changes that

00:34:22.335 --> 00:34:24.335
are unsaved. And if you try and git

00:34:24.335 --> 00:34:26.175
reset and git checkout when you have those

00:34:26.175 --> 00:34:29.215
unsaved changes, git will be confused and not

00:34:29.215 --> 00:34:30.895
know what to do, and you'll get errors.

00:34:31.855 --> 00:34:33.615
So just make sure that you save or

00:34:33.615 --> 00:34:36.370
close out of your unsaved files so that

00:34:37.090 --> 00:34:39.330
you can totally flush out your changes when

00:34:39.330 --> 00:34:43.170
you do git reset dash dash hard. Alright.

00:34:43.170 --> 00:34:45.650
So I'll give you a minute to run

00:34:45.650 --> 00:34:48.865
those commands and I will get into my

00:34:48.865 --> 00:35:08.320
Kappa React. Okay. So I'm in my Versus

00:35:08.320 --> 00:35:10.800
code. I'm on w one step one, and

00:35:10.800 --> 00:35:12.800
then in another terminal, I just use we

00:35:12.800 --> 00:35:14.595
just use this button to open up a

00:35:14.595 --> 00:35:16.515
split screen terminal, or this one to just

00:35:16.515 --> 00:35:18.755
create a new window of our terminals in

00:35:18.755 --> 00:35:22.995
Versus Code. And then here, in another terminal,

00:35:22.995 --> 00:35:24.675
I'm going to be running npm run dev.

00:35:28.440 --> 00:35:29.880
Raise your hand if you need more time

00:35:29.880 --> 00:35:32.200
to execute these commands and get caught up.

00:35:34.200 --> 00:35:36.920
Cool. We'll move along then. So your next

00:35:36.920 --> 00:35:39.400
task is to add the cat happiness component.

00:35:40.040 --> 00:35:42.115
And so what we need to do is

00:35:42.115 --> 00:35:44.355
we need to add a state for cat

00:35:44.355 --> 00:35:47.235
happiness to our profile. Actually, wait. Before before

00:35:47.235 --> 00:35:49.475
I get into that, don't worry about this

00:35:49.475 --> 00:35:52.435
slide for now. Just take one second. Let's

00:35:52.435 --> 00:35:54.515
open up, the files that we're going to

00:35:54.515 --> 00:35:55.760
be working in. So if we go into

00:35:55.760 --> 00:35:57.440
the client folder, that just means our front

00:35:57.440 --> 00:35:59.440
end, and we go into source, because it's

00:35:59.440 --> 00:36:01.760
our source code, and then components, because these

00:36:01.760 --> 00:36:04.320
are React components, then if we open up

00:36:04.320 --> 00:36:07.200
the modules and pages folders, in the modules,

00:36:07.200 --> 00:36:08.960
we'll see cat happiness dot j s x,

00:36:08.960 --> 00:36:11.845
which we'll be working in. And then in

00:36:12.405 --> 00:36:15.365
the pages folder, we'll see profile dot j

00:36:15.365 --> 00:36:17.285
s x. And that's just because profile is

00:36:17.285 --> 00:36:19.845
an entire page, whereas cat happiness is just

00:36:19.845 --> 00:36:22.820
a small subcomponent of a page. So take

00:36:22.820 --> 00:36:25.220
a second, open up both of those files,

00:36:26.580 --> 00:36:28.900
and take a minute to read over both

00:36:28.900 --> 00:36:31.380
of the files and figure out, like, what

00:36:31.380 --> 00:36:33.380
we have right now. Before we're don't worry

00:36:33.380 --> 00:36:35.940
about what we're gonna add. Just look and

00:36:35.940 --> 00:36:38.740
figure out what what is being stored in

00:36:37.695 --> 00:36:52.670
these files. And why don't you turn and

00:36:52.670 --> 00:36:55.070
talk to someone next to you? Show them

00:36:55.310 --> 00:36:57.710
either profile or cat happiness, and just tell

00:36:57.710 --> 00:36:59.150
them what we have in the file so

00:36:59.150 --> 00:37:56.210
far before we're adding anything. Alright. Hearing some

00:37:56.210 --> 00:37:58.450
good conversations, but I'm gonna pull us back.

00:37:58.450 --> 00:38:01.330
So just to quickly recap, what we have

00:38:01.330 --> 00:38:03.975
right now in our profile page is this

00:38:03.975 --> 00:38:07.175
is a React component and inside, here we

00:38:07.175 --> 00:38:09.975
have the container for our avatar. That's our

00:38:09.975 --> 00:38:14.055
little corgi boy. And then here's our name

00:38:14.055 --> 00:38:17.630
and then the horizontal line. And then here,

00:38:17.630 --> 00:38:19.710
we have our flexbox that contains all of

00:38:19.710 --> 00:38:22.030
the things that happen under the horizontal line,

00:38:22.110 --> 00:38:25.150
namely the about me section, and then what

00:38:25.150 --> 00:38:27.070
will be our cat happiness component, but isn't

00:38:27.070 --> 00:38:29.710
yet, and then the section that says my

00:38:29.710 --> 00:38:35.265
favorite type of cat. And then inside the

00:38:35.265 --> 00:38:38.225
cat happiness component right now, we have basically

00:38:38.225 --> 00:38:42.945
nothing. It's just a bunch of containers. Any

00:38:42.945 --> 00:38:48.510
questions on the code? Okay. So next up,

00:38:48.510 --> 00:38:50.990
we're going to add cat happiness. So we

00:38:50.990 --> 00:38:53.550
wanna add the cat happiness state to profile

00:38:53.550 --> 00:38:56.350
dot j s, and then we want to

00:38:56.510 --> 00:38:59.550
import the cat happiness component into profile dot

00:38:59.550 --> 00:39:00.990
j s so that we can use it.

00:39:01.230 --> 00:39:02.715
And we're going to add the cat happiness

00:39:02.715 --> 00:39:05.515
component right here in our profile dot j

00:39:05.515 --> 00:39:09.835
s. And then, finally, inside the cat happiness

00:39:10.075 --> 00:39:11.995
if you have extra time, inside the cat

00:39:11.995 --> 00:39:16.075
happiness file, then we'll, take in a cat

00:39:16.075 --> 00:39:26.680
happiness prop. Yes. So the actually, I'll give

00:39:26.680 --> 00:39:27.800
I'll give you a minute just to, like,

00:39:27.800 --> 00:39:47.200
parse what we're doing. So basically, what we're

00:39:47.200 --> 00:39:49.840
doing in this step is if we have

00:39:49.840 --> 00:39:58.105
our whole profile page And then within it,

00:39:58.105 --> 00:40:03.305
we have, you know, our profile, etcetera. And

00:40:03.305 --> 00:40:05.305
then within it, we have this component that's

00:40:05.305 --> 00:40:09.700
just the cat happiness button. And this is

00:40:09.700 --> 00:40:18.020
cat happiness. That's our component. Then remember that

00:40:18.020 --> 00:40:19.780
we said earlier that we want profile to

00:40:19.780 --> 00:40:22.055
store the state of cat happiness, cat happiness

00:40:22.055 --> 00:40:25.415
being the number that we wanna display here.

00:40:26.215 --> 00:40:29.015
So that means that profile is going to

00:40:29.015 --> 00:40:33.575
need to store some kind of cat happiness

00:40:33.575 --> 00:40:42.050
state. But then in order for the cat

00:40:42.050 --> 00:40:44.450
happiness component to render it, we need to

00:40:44.450 --> 00:40:48.050
pass that state down into the cat happiness

00:40:48.050 --> 00:40:51.515
component as a prop. And so that's what

00:40:51.515 --> 00:40:54.155
we're going to do in this step. And

00:40:54.155 --> 00:40:57.035
additionally, we also need to add the cat

00:40:57.035 --> 00:41:05.150
happiness component to the profile. Raise your hand

00:41:05.150 --> 00:41:06.510
if you're confused on what we're doing in

00:41:06.510 --> 00:41:12.830
this step. Okay. In that case, let's get

00:41:12.830 --> 00:41:14.750
coding. I will give you guys a few

00:41:14.750 --> 00:41:19.715
minutes to attempt this and feel free to

00:41:19.715 --> 00:41:20.995
flag down one of the staff if you

00:41:20.995 --> 00:43:52.735
have any questions. Hold up a finger or

00:43:52.735 --> 00:43:54.175
two or three or four for how many

00:43:54.175 --> 00:43:55.535
more minutes you think you need on this.

00:43:57.620 --> 00:44:01.140
Alright. Cool. I will give another two to

00:44:01.140 --> 00:46:59.115
three minutes, maybe three minutes. Yeah. Alright. Let's

00:46:59.115 --> 00:47:01.515
do another time check. Give me a finger

00:47:01.515 --> 00:47:03.515
or two or three for how many more

00:47:03.515 --> 00:47:11.430
minutes you think you need. Okay. I will

00:47:11.430 --> 00:47:13.670
give, like, one more minute, and then we'll

00:47:13.670 --> 00:48:25.685
pull back together. Alright. For the sake of

00:48:25.685 --> 00:48:27.125
time, I'm gonna have to pull us back

00:48:27.125 --> 00:48:29.525
together, but I hear some really great chatter,

00:48:30.120 --> 00:48:33.080
really great digesting it. Don't worry if you

00:48:33.080 --> 00:48:35.560
don't get it right away. You'll have plenty

00:48:35.560 --> 00:48:37.720
of opportunities to practice this and by the

00:48:37.720 --> 00:48:39.640
end of WebLab, you will be a pro.

00:48:41.000 --> 00:48:44.395
Alright. So first thing that I'm going to

00:48:44.395 --> 00:48:47.195
do is add the cat happiness component here.

00:48:47.195 --> 00:48:48.235
This is a little bit out of order

00:48:48.235 --> 00:48:51.515
from the slide, but generally, if I'm if

00:48:51.515 --> 00:48:53.595
I have a component inside of another component,

00:48:53.595 --> 00:48:55.355
I'm just gonna add it and see what

00:48:55.355 --> 00:48:58.530
happens. So right now, I'm gonna add inside

00:48:58.530 --> 00:49:06.930
of this div the oh, wait. I think

00:49:07.010 --> 00:49:12.210
I need to put another sub container div

00:49:12.210 --> 00:49:15.465
in here so that I can make sure

00:49:15.465 --> 00:49:19.865
that this cat happiness component fills in its

00:49:19.865 --> 00:49:24.025
own little section of the profile page. I'm

00:49:24.025 --> 00:49:27.225
gonna stick another div in here and then

00:49:27.225 --> 00:49:29.065
put the cat happiness component inside of it.

00:49:30.880 --> 00:49:32.240
So this is what I would do if

00:49:32.240 --> 00:49:35.760
I just passed in a component normally. And

00:49:35.760 --> 00:49:37.360
then let's see what I and this is

00:49:37.360 --> 00:49:40.320
what I changed. So let's see what happens

00:49:40.320 --> 00:49:44.945
when I run this. I'm just gonna make

00:49:44.945 --> 00:49:50.065
this small on the side. Oh, wait. This

00:49:50.065 --> 00:49:52.465
is the example. My bad. I was like,

00:49:52.465 --> 00:49:53.745
why is it working? It's not supposed to

00:49:53.745 --> 00:49:56.385
be working. Okay. Notice I get this white

00:49:56.385 --> 00:49:58.305
screen. If I get this white screen, that

00:49:58.305 --> 00:50:00.220
means there's an error. What you should do

00:50:00.220 --> 00:50:02.700
when you get this is open up the

00:50:02.700 --> 00:50:04.860
console, which you can do by right clicking,

00:50:04.860 --> 00:50:07.660
going to inspect, and then opening up the

00:50:07.660 --> 00:50:10.700
JavaScript console. And then here, you'll typically see

00:50:10.700 --> 00:50:13.180
more detailed error messages on what exactly went

00:50:13.180 --> 00:50:16.125
wrong. So here, notice, I get this f

00:50:16.365 --> 00:50:19.005
error here, uncaught reference error, cat happiness is

00:50:19.005 --> 00:50:22.445
not defined at profile, which means that it

00:50:22.445 --> 00:50:24.205
doesn't know what cat happiness is. That means

00:50:24.205 --> 00:50:27.080
I forgot to import it. So I'm gonna

00:50:27.080 --> 00:50:29.320
import the cat happiness state so my profile

00:50:29.320 --> 00:50:34.840
knows what to do with it. So here

00:50:34.840 --> 00:50:39.125
at the top, I'm going to import cat

00:50:39.125 --> 00:50:42.005
happiness from, and then here I need to

00:50:42.005 --> 00:50:46.725
put the file path of file that I'm

00:50:46.725 --> 00:50:49.845
getting this component from. And in this case,

00:50:51.100 --> 00:50:53.660
the current location that I'm at, that profile

00:50:53.660 --> 00:50:55.180
dot j s x is in, is inside

00:50:55.180 --> 00:50:58.700
pages. This is but the cat happiness component

00:50:58.700 --> 00:51:01.420
is inside modules, which is a different folder.

00:51:01.820 --> 00:51:04.185
So I need to in order to get

00:51:04.185 --> 00:51:07.705
the file path of cat happiness relative to

00:51:07.705 --> 00:51:10.265
profile, I need to use dot dot to

00:51:10.265 --> 00:51:13.865
step back one directory into the components directory.

00:51:15.385 --> 00:51:16.745
And then from there, I can go into

00:51:16.745 --> 00:51:20.700
modules, so slash modules. And from there, I

00:51:20.700 --> 00:51:25.820
can get the cat happiness component. And so

00:51:25.820 --> 00:51:29.500
now, after importing cat happiness from one step

00:51:29.500 --> 00:51:32.140
back into modules folder, cat happiness dot j

00:51:32.140 --> 00:51:39.375
s x, Then, hopefully, if I reload this

00:51:39.375 --> 00:51:44.815
page, it is still sad at me. Why

00:51:44.815 --> 00:51:47.215
is it still sad at me? Cat happiness.

00:51:54.060 --> 00:51:59.900
Did I import this wrong? Cat happiness is

00:51:59.900 --> 00:52:10.655
not defined. Wait. I actually have no idea

00:52:10.655 --> 00:52:16.820
what I did wrong here. Here, give me

00:52:16.820 --> 00:52:22.820
a sec. Let me check the solution. Wait,

00:52:22.820 --> 00:52:26.020
that's literally right. What am I doing? Oh,

00:52:26.020 --> 00:52:36.285
really? No. Wait. I'm pretty sure you can

00:52:36.285 --> 00:52:41.005
put it. Okay. You know what? I'm going

00:52:41.005 --> 00:52:44.200
to just keep coding for the sake of

00:52:44.520 --> 00:52:46.200
education and then figure out what the heck

00:52:46.200 --> 00:52:49.560
I did wrong there in a bit. Okay.

00:52:51.240 --> 00:52:53.480
So next up, after we added the cat

00:52:53.480 --> 00:52:57.125
happiness component, we are going to add a

00:52:57.125 --> 00:52:59.685
state to hold the number of the cat

00:52:59.685 --> 00:53:02.245
happiness. So cat happiness with a capital c,

00:53:02.245 --> 00:53:04.805
we're using as the component, and then we're

00:53:04.805 --> 00:53:07.125
going to define a state for the similar

00:53:07.125 --> 00:53:10.005
thing. So we're going to do const, and

00:53:10.005 --> 00:53:13.890
then cat happiness, and then set cat happiness

00:53:14.770 --> 00:53:18.690
is equal to use state. And then we'll

00:53:18.690 --> 00:53:21.010
set our default value to be zero because

00:53:21.010 --> 00:53:24.415
we have zero cat happiness to start. And

00:53:24.415 --> 00:53:25.775
then we'll get the same kind of error

00:53:25.775 --> 00:53:28.255
if we just have this as is. So

00:53:28.255 --> 00:53:30.975
we need to also import use state from

00:53:30.975 --> 00:53:33.775
React. And so the syntax for this is

00:53:33.775 --> 00:53:38.895
we need to add brackets and then import

00:53:38.895 --> 00:53:41.990
use state. So I added the use state

00:53:41.990 --> 00:53:46.630
import here and then created a state here.

00:53:48.470 --> 00:53:51.270
Any questions on this syntax for React state?

00:53:59.475 --> 00:54:02.515
Alright. Then we're gonna actually use that state

00:54:02.755 --> 00:54:05.875
to pass down into cat happiness, so cat

00:54:05.875 --> 00:54:08.920
happiness component can display it. And so I'm

00:54:08.920 --> 00:54:11.160
gonna pass it into the cat happiness component

00:54:11.160 --> 00:54:13.880
as a prop. So here, I have my

00:54:13.880 --> 00:54:16.360
cat happiness component. I'm gonna pass in the

00:54:16.360 --> 00:54:19.640
cat happiness prop is equal to the value,

00:54:20.600 --> 00:54:23.455
and then here, we're going to put our

00:54:23.455 --> 00:54:28.175
cat happiness state. Now I apologize for the

00:54:28.175 --> 00:54:30.015
kind of bad naming where everything is named

00:54:30.015 --> 00:54:33.215
cat happiness, but basically, this cat happiness is

00:54:33.215 --> 00:54:36.015
our component. And then we have a prop

00:54:36.015 --> 00:54:39.190
whose the the prop name is cat happiness,

00:54:39.750 --> 00:54:42.870
and then we're setting that equal to and

00:54:42.870 --> 00:54:45.190
then notice here that we have to include

00:54:45.190 --> 00:54:47.590
the curly braces because we're entering a JavaScript

00:54:47.590 --> 00:54:50.630
environment. So we're inserting JavaScript into our HTML

00:54:50.630 --> 00:54:55.165
using these curly braces. And then here, we

00:54:55.165 --> 00:54:57.645
can put the JavaScript variable, also known as

00:54:57.645 --> 00:55:01.245
our react state, cat happiness. So we'll take

00:55:01.245 --> 00:55:03.885
the cat happiness number from our react state,

00:55:03.965 --> 00:55:06.020
feed it into the HTML, and then that's

00:55:06.020 --> 00:55:08.420
the prop value for the cat happiness prop

00:55:08.420 --> 00:55:11.140
for our cat happiness component. Well, the number

00:55:11.140 --> 00:55:13.860
of times I've seen cat happiness today. Any

00:55:15.540 --> 00:55:22.275
questions on this code? Okay. So just to

00:55:22.275 --> 00:55:25.155
summarize, all of the changes that I made

00:55:25.155 --> 00:55:26.835
to this code, I added the cat happiness

00:55:26.835 --> 00:55:29.315
component and passed in our state as a

00:55:29.315 --> 00:55:35.890
prop. I added this state, and then I

00:55:35.890 --> 00:55:42.210
imported all the necessary things up above. I'll

00:55:42.210 --> 00:55:44.130
give you a sec just to copy it

00:55:44.130 --> 00:55:47.285
down if you need. Are you not? I'm

00:55:47.285 --> 00:55:49.285
just gonna keep going. And then all we

00:55:49.285 --> 00:55:50.965
need to do now is we need to

00:55:50.965 --> 00:55:53.685
actually display the prop, like, receive the prop

00:55:53.765 --> 00:55:55.925
in the cat happiness component itself. Because we're

00:55:55.925 --> 00:55:57.845
passing it in here from profile to cat

00:55:57.845 --> 00:55:59.925
happiness. We're not doing anything with it right

00:55:59.925 --> 00:56:02.330
now. So I'll open up our cat happiness

00:56:02.330 --> 00:56:05.930
component here. And here, in order to receive

00:56:05.930 --> 00:56:10.090
props, we just put the props here as

00:56:10.090 --> 00:56:14.265
an input to our function, and then we'll

00:56:14.265 --> 00:56:16.825
display the count we'll display the prop. So

00:56:16.825 --> 00:56:19.865
here, again, we're using curly braces because we're

00:56:19.865 --> 00:56:23.625
putting in JavaScript thing that is our props

00:56:23.625 --> 00:56:28.760
dot cat happiness. And this is a JavaScript

00:56:28.760 --> 00:56:30.440
expression, so we need to put it inside

00:56:30.440 --> 00:56:32.680
curly braces in order for it to be

00:56:32.680 --> 00:56:35.960
inserted into the HTML. So this is how

00:56:35.960 --> 00:56:39.875
we pass a prop down on the left

00:56:39.875 --> 00:56:41.395
side, and then on the right side, you

00:56:41.395 --> 00:56:44.115
see, as a child component, we're receiving that

00:56:44.115 --> 00:56:49.155
prop. Notice here that earlier we talked about

00:56:49.155 --> 00:56:52.755
React components being literally just a function. So

00:56:52.755 --> 00:56:54.755
we have this React component that's a function

00:56:55.340 --> 00:56:58.380
called cat happiness that takes in props as

00:56:58.380 --> 00:57:02.460
input and spits out the corresponding HTML for

00:57:02.460 --> 00:57:06.700
those props. Or, like, for the component, I

00:57:06.700 --> 00:57:13.215
guess. Alright. Next, we are going to move

00:57:13.215 --> 00:57:19.615
on to the next step. And so right

00:57:19.615 --> 00:57:21.455
now, if we display this, which let me

00:57:21.455 --> 00:57:23.610
see if I don't have a bug and

00:57:23.610 --> 00:57:26.970
can show you guys. No. I have the

00:57:26.970 --> 00:57:33.610
same bug. That's tragic. Maybe I misspelled something.

00:57:40.115 --> 00:57:41.955
Oh, I just forgot to save my files.

00:57:41.955 --> 00:57:46.515
I'm trolling, guys. Sorry. It works. Don't worry,

00:57:46.515 --> 00:57:48.995
my code works. So here, right now, it's

00:57:48.995 --> 00:57:51.880
zero, but obviously, if we click this, nothing

00:57:51.880 --> 00:57:53.880
happens. So that's what we're going to do

00:57:53.880 --> 00:57:56.040
next. We're gonna implement the functionality so when

00:57:56.040 --> 00:57:58.040
we click our profile page, the cat happiness

00:57:58.040 --> 00:58:05.225
increments. That's pretty straightforward to do. Okay. Now

00:58:05.225 --> 00:58:07.785
we're gonna get caught up, so git reset

00:58:07.785 --> 00:58:10.025
hard and git checkout to the next step.

00:58:25.550 --> 00:58:26.990
I'll give you a second to do that.

00:58:37.495 --> 00:58:40.615
Alright. Let's move on. Hey, Daniel. We have

00:58:40.615 --> 00:58:46.070
a question. Oh, never mind. Maybe we're good.

00:58:46.070 --> 00:58:59.515
Okay. So next up for this step, why

00:58:59.515 --> 00:59:03.515
don't you turn and talk to someone actually,

00:59:03.515 --> 00:59:05.595
wait, no. I take that back. We're gonna

00:59:05.595 --> 00:59:07.115
change the cat happiness when I click on

00:59:07.115 --> 00:59:09.035
our profile picture. And so what we're going

00:59:09.035 --> 00:59:10.875
to do for this is we're gonna define

00:59:10.875 --> 00:59:13.690
a function inside of our profile component called

00:59:13.690 --> 00:59:17.770
increment cat happiness. And that function, increment cat

00:59:17.770 --> 00:59:19.610
happiness, is just going to take our cat

00:59:19.610 --> 00:59:22.730
happiness and add one. Pretty simple. So we're

00:59:22.730 --> 00:59:24.810
gonna write that, and then we're also going

00:59:24.810 --> 00:59:28.165
to implement the code to call that function

00:59:28.165 --> 00:59:31.685
any time we click the profile picture. And

00:59:31.685 --> 00:59:33.365
so the way we're going to do this

00:59:33.365 --> 00:59:36.805
is that in HTML, any div has an

00:59:36.805 --> 00:59:40.480
on click attribute. And that attribute takes in

00:59:40.480 --> 00:59:42.160
a function such that when you click on

00:59:42.160 --> 00:59:44.960
that div in the HTML, that function will

00:59:44.960 --> 00:59:47.840
be called. And so we want to run

00:59:47.840 --> 00:59:52.080
that, like, input the increment cat happiness function

00:59:52.080 --> 00:59:54.775
to the on click of our div. But

00:59:54.775 --> 00:59:57.975
before we get into that, we're going to

00:59:58.215 --> 01:00:00.295
think about how we might implement this. So

01:00:00.295 --> 01:00:05.015
these are all partial implementations of this step.

01:00:05.335 --> 01:00:06.970
And I'll give you a minute to read

01:00:06.970 --> 01:00:09.770
the code and think about which ones are

01:00:09.770 --> 01:00:12.250
valid ways of implementing this. Which ones will

01:00:12.250 --> 01:00:30.655
work and which ones won't. Alright. Now, talk

01:00:30.655 --> 01:00:32.255
to someone next to you. What do you

01:00:32.255 --> 01:00:41.940
think? And we're assuming here that increment cat

01:00:41.940 --> 01:00:44.180
happiness is just what I described earlier, a

01:00:44.180 --> 01:00:47.140
function that increases the cat happiness by one.

01:01:20.535 --> 01:01:22.775
Alright, I'll pull everyone back together. Let's take

01:01:22.775 --> 01:01:26.375
a poll. Open hands if you think a

01:01:26.375 --> 01:01:28.295
works, close hands if you think it doesn't.

01:01:31.000 --> 01:01:33.080
Open hands, close okay. Okay. We're getting a

01:01:33.080 --> 01:01:35.160
mix. How about for b? Open hands if

01:01:35.160 --> 01:01:36.600
you think it works, close hands if it

01:01:36.600 --> 01:01:41.880
doesn't. Okay. Mostly open hands. Now, c? Open

01:01:41.880 --> 01:01:43.880
hands for yes, close hands for no doesn't

01:01:43.880 --> 01:01:49.285
work? Alright. Also mostly open hands. D, open

01:01:49.285 --> 01:01:51.845
hands if it works, closed hands if it

01:01:51.845 --> 01:01:55.605
doesn't. Okay. A lot of closed hands, that's

01:01:55.605 --> 01:01:59.060
good. The correct answer is that a, b,

01:01:59.060 --> 01:02:02.980
and c all work, d does not. D

01:02:02.980 --> 01:02:04.660
does not work because we are calling the

01:02:04.660 --> 01:02:08.260
increment cat happiness function and passing whatever that

01:02:08.260 --> 01:02:11.780
function returns into the on click, which is

01:02:11.780 --> 01:02:14.325
not good because increment cat happiness probably returns,

01:02:14.325 --> 01:02:16.565
like, undefined or something. And so what we're

01:02:16.565 --> 01:02:20.325
passing to the on click is useless. But

01:02:20.325 --> 01:02:22.405
all of these, a b and c, all

01:02:22.405 --> 01:02:24.965
work. Now if you notice, a here is

01:02:24.965 --> 01:02:28.000
a function that takes in nothing, and what

01:02:28.000 --> 01:02:29.440
it does inside the function is just call

01:02:29.440 --> 01:02:33.680
increment cat happiness. So it's literally exactly the

01:02:33.680 --> 01:02:38.160
same as c, but just a lot more

01:02:38.160 --> 01:02:41.105
verbose code. So c is a much cleaner

01:02:41.105 --> 01:02:43.825
way of writing what you might wanna do

01:02:43.825 --> 01:02:48.145
in a. And then b is just, rather

01:02:48.145 --> 01:02:49.985
than going through the increment cat happiness method,

01:02:49.985 --> 01:02:53.425
we're just directly using the react state setter

01:02:53.425 --> 01:02:58.170
to set the cat happiness. Okay, so without

01:02:58.170 --> 01:02:59.930
further ado, I'm gonna have you guys implement

01:02:59.930 --> 01:03:03.370
this. So implement the increment cat happiness method

01:03:03.370 --> 01:03:07.370
and then call that method whenever the profile

01:03:07.370 --> 01:03:11.055
picture's clicked. I'll give you, like, two minutes

01:03:11.055 --> 01:03:13.855
to attempt this. We'll be walking around if

01:03:13.855 --> 01:05:14.870
you have any questions. Alright, show of fingers

01:05:14.870 --> 01:05:22.470
how many remotis people need? Alright. Cool. I

01:05:22.470 --> 01:05:30.445
am going to get started then. Alright. It

01:05:30.445 --> 01:05:32.365
seems like people are nearing on being done,

01:05:32.365 --> 01:05:34.685
if not done already. So I'm going to

01:05:35.005 --> 01:05:39.325
pull us back together and implement this. So

01:05:39.325 --> 01:05:41.500
we're not gonna need cat happiness right We're

01:05:41.500 --> 01:05:43.740
just gonna be in profile dot j s

01:05:43.740 --> 01:05:46.220
x. And so here, we have our function,

01:05:46.220 --> 01:05:49.900
increment cat happiness. All we wanna do is

01:05:50.540 --> 01:05:56.215
call the set cat happiness method. And then

01:05:56.215 --> 01:05:57.575
what do we wanna set it to? Well,

01:05:57.575 --> 01:05:58.775
we wanna set it to the old cat

01:05:58.775 --> 01:06:00.775
happiness plus one. So that's what we're gonna

01:06:00.775 --> 01:06:06.135
do. So this is how we increment our

01:06:06.135 --> 01:06:14.710
cat happiness function. And then in order to

01:06:14.710 --> 01:06:17.910
make this function called, any time we click

01:06:17.910 --> 01:06:20.710
on our profile picture, we're going to go

01:06:20.710 --> 01:06:24.550
to this div here, profile avatar container, and

01:06:23.735 --> 01:06:25.735
we're gonna give it an on click attribute.

01:06:26.215 --> 01:06:29.335
And remember, we're using these curly braces to

01:06:29.335 --> 01:06:32.295
enter a JavaScript, little mini to evaluate a

01:06:32.295 --> 01:06:37.015
JavaScript expression. And so here, we're going to

01:06:37.015 --> 01:06:43.390
put in the function increment cat happiness. So

01:06:43.390 --> 01:06:45.950
here is what I changed, these two lines.

01:06:49.230 --> 01:06:56.615
And then if we run this, and we

01:06:56.615 --> 01:06:58.935
click on our profile picture, and our cat

01:06:58.935 --> 01:07:05.015
happiness increments. Yay. It works. Any questions on

01:07:05.015 --> 01:07:14.150
this code? Alright. We're all set then. So

01:07:14.150 --> 01:07:15.590
if you wanna check out the finished app

01:07:15.590 --> 01:07:16.950
and you weren't able to get there, feel

01:07:16.950 --> 01:07:20.390
free to git checkout w one complete. But

01:07:20.390 --> 01:07:24.385
otherwise, I'm gonna skip this recap for the

01:07:24.385 --> 01:07:27.345
sake of time. And after this, after a

01:07:27.345 --> 01:07:28.785
quick break, we're going to talk a little

01:07:28.785 --> 01:07:30.705
bit more about the React life cycle and

01:07:30.705 --> 01:07:35.950
hooks. Okay. Real quick, just open up the

01:07:35.950 --> 01:07:37.630
feedback form, and you can give Sanve and

01:07:37.630 --> 01:07:39.150
I feedback on the workshop.
