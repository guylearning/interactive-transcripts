WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: c74f1c9a-d4aa-4c0c-8334-5e36fdcbe4d3
Created: 2025-05-30T04:40:34.765Z
Duration: 420.2318
Channels: 1

00:00:00.960 --> 00:00:04.080
Hi there. This is Chris and in this

00:00:04.080 --> 00:00:06.400
video we are going to look at the

00:00:06.400 --> 00:00:09.760
file system for the Myth computers which happens

00:00:09.760 --> 00:00:12.935
to be, simply a tree just like you

00:00:12.935 --> 00:00:14.375
would have learned in CS one zero six

00:00:14.375 --> 00:00:17.335
b. The tree that has a root and

00:00:17.335 --> 00:00:19.895
has all these children and the children are

00:00:19.895 --> 00:00:23.815
files and directories and so forth and that's

00:00:23.815 --> 00:00:27.400
how the file system is built. And we're

00:00:27.400 --> 00:00:29.000
gonna take a quick look at this and

00:00:29.000 --> 00:00:33.240
see a couple different ways of looking at

00:00:33.240 --> 00:00:37.240
it. But in other videos like the CD

00:00:37.240 --> 00:00:41.265
change directory and the LS list directory videos,

00:00:41.265 --> 00:00:42.945
you can see more details about how you

00:00:42.945 --> 00:00:45.425
actually navigate the tree. We're gonna take a

00:00:45.425 --> 00:00:46.785
look at this. So I have me logged

00:00:46.785 --> 00:00:49.905
on to the myth system and I have

00:00:49.905 --> 00:00:52.705
a folder called CS one zero seven. And

00:00:52.705 --> 00:00:57.090
in that folder, have an assignments folder, which

00:00:57.090 --> 00:00:58.930
I just kind of made up. And if

00:00:58.930 --> 00:01:04.370
I take the command tree assignments, then what

00:01:04.370 --> 00:01:07.570
it does it lists all the folders and

00:01:08.225 --> 00:01:10.545
directories and files underneath the assignments. So as

00:01:10.545 --> 00:01:13.985
you can see assignments here has one child,

00:01:13.985 --> 00:01:17.585
two children, three, four, five, six, seven different

00:01:17.585 --> 00:01:22.710
children, their files and directories and some of

00:01:22.710 --> 00:01:24.630
them have multiple files in them, some have

00:01:24.630 --> 00:01:27.350
a folder with another file in them. Assignment

00:01:27.750 --> 00:01:31.430
one here has a bunch of children called

00:01:31.430 --> 00:01:34.150
file one, file two dot txt folder one

00:01:34.150 --> 00:01:36.070
and folder two and then folder one has

00:01:36.070 --> 00:01:39.445
a child called my program. So that's really

00:01:39.445 --> 00:01:42.725
the structure of the the system here. You

00:01:42.725 --> 00:01:45.845
can actually type another command tree dash f,

00:01:45.845 --> 00:01:47.445
which will give you a little bit oops.

00:01:47.445 --> 00:01:49.925
Tree dash f assignments, which will give you

00:01:49.925 --> 00:01:53.030
a little bit more information about that. And

00:01:53.030 --> 00:01:55.270
in this case, it gives you, some little

00:01:55.270 --> 00:01:57.750
trailing characters at the end of some of

00:01:57.750 --> 00:02:01.270
the names. If it if a name ends

00:02:01.270 --> 00:02:03.750
with a slash, it means it's a directory.

00:02:03.750 --> 00:02:05.945
If a name ends with a asterisk, it

00:02:05.945 --> 00:02:09.385
actually means that it is executable or runnable.

00:02:09.385 --> 00:02:11.705
It's an app of some sort. And we're

00:02:11.705 --> 00:02:13.145
actually gonna try that out in a minute.

00:02:13.305 --> 00:02:17.065
And then all the other files all the

00:02:17.065 --> 00:02:19.190
other names are just files. In fact, can

00:02:19.190 --> 00:02:20.870
look at the tilde one here. This is

00:02:20.870 --> 00:02:22.950
not has nothing to do with the file

00:02:22.950 --> 00:02:24.470
system. It's just the name of the file

00:02:24.470 --> 00:02:27.030
hello dot c tilde, which is a backup

00:02:27.030 --> 00:02:31.785
file that, some editors like VIM, create. So

00:02:31.785 --> 00:02:36.745
that's that's the tree structure. If you wanted

00:02:36.745 --> 00:02:38.905
to go to the actual root of the

00:02:38.905 --> 00:02:41.065
tree, that's the slash file. And if you

00:02:41.065 --> 00:02:43.880
look at this, there's there's all these files

00:02:43.880 --> 00:02:45.560
you may not have any idea what they

00:02:45.560 --> 00:02:48.520
mean, but they are, this is the root

00:02:48.520 --> 00:02:50.440
of the root of the entire file system

00:02:50.440 --> 00:02:52.840
and you only have access to certain parts

00:02:52.840 --> 00:02:55.160
of the file system. But it's pretty big.

00:02:55.475 --> 00:02:58.115
It's, we're talking like thousands of people at

00:02:58.115 --> 00:03:00.435
Stanford on this one file system. So it's

00:03:00.435 --> 00:03:03.555
a gigantic file system. Okay? I will actually

00:03:03.555 --> 00:03:07.955
go back to my, my regular working directory,

00:03:07.955 --> 00:03:09.715
which is part of this is where my

00:03:09.715 --> 00:03:13.790
directory lives on the file system. And there's

00:03:13.790 --> 00:03:16.430
a main directory and then subdirectory, subdirectory, subdirectory,

00:03:16.430 --> 00:03:24.205
subdirectory, and then my my directory. And you're

00:03:24.205 --> 00:03:27.085
in your directory you actually have access to

00:03:27.085 --> 00:03:30.605
all the files in your directory. Okay, so

00:03:30.605 --> 00:03:33.325
let's actually take a look again at CS107

00:03:33.325 --> 00:03:36.765
and then assignments here and we can actually

00:03:36.765 --> 00:03:39.120
do an LS and this LS is list

00:03:39.120 --> 00:03:40.880
files, this actually just shows you all the

00:03:40.880 --> 00:03:44.720
files. But again if you wanna see more

00:03:44.720 --> 00:03:47.120
details you can type tree and get all

00:03:47.120 --> 00:03:49.920
the details there, can type tree dash f

00:03:49.920 --> 00:03:51.515
and get more details or you can do

00:03:51.515 --> 00:03:53.915
l s dash l which you'll see in

00:03:53.915 --> 00:03:57.835
the l s the l s video as

00:03:57.835 --> 00:04:00.635
well. There's two specific files. If we actually

00:04:00.635 --> 00:04:02.955
do l s dash al, there's two specific

00:04:02.955 --> 00:04:05.195
files here which are important for the file

00:04:05.195 --> 00:04:10.200
system. The first one is the dot and

00:04:10.280 --> 00:04:14.440
dot is just a the name for the

00:04:14.440 --> 00:04:17.560
current directory. So whatever current directory you're in,

00:04:18.040 --> 00:04:21.275
that is the dot directory. Okay. The dot

00:04:21.275 --> 00:04:25.195
dot directory is your parent directory. Okay. So

00:04:25.195 --> 00:04:27.035
if we go back, let's go back to

00:04:27.035 --> 00:04:29.435
10 7 and if we do l s,

00:04:29.435 --> 00:04:32.395
there's two two files in here, assignments and

00:04:32.395 --> 00:04:34.510
old, they both have to be folders. And

00:04:34.510 --> 00:04:36.270
by the way, ls also has a dash

00:04:36.270 --> 00:04:38.030
f to give you a little more information,

00:04:38.190 --> 00:04:41.230
dash uppercase f. And, there's two folders in

00:04:41.230 --> 00:04:43.470
here. If we go into assignments and we

00:04:43.470 --> 00:04:46.110
do ls dash al, notice that we've got

00:04:46.110 --> 00:04:49.870
dot and dot dot. If we do ls

00:04:49.105 --> 00:04:52.305
dot dot, that means give us a directory

00:04:52.305 --> 00:04:55.745
of our parent which was c which is

00:04:55.745 --> 00:04:58.305
C S 1 0 7. And guess what?

00:04:58.305 --> 00:05:00.305
If we do that, it's assignments and old

00:05:00.305 --> 00:05:03.940
because the we are the assignments folder and

00:05:03.940 --> 00:05:07.140
the one above is CS107. So that's what

00:05:07.140 --> 00:05:08.980
dot dot means. Now why do you care

00:05:08.980 --> 00:05:11.220
about the parent directory or the current directory?

00:05:11.220 --> 00:05:13.780
Well, it's useful when you talk about relative

00:05:13.780 --> 00:05:16.965
paths which is also another video that you

00:05:16.965 --> 00:05:19.525
can look in. Okay. We also use the

00:05:19.525 --> 00:05:23.925
current directory in a very specific way. Let's

00:05:23.925 --> 00:05:26.565
see if we do tree again and if

00:05:26.565 --> 00:05:31.420
we go into assignment zero and in here

00:05:31.420 --> 00:05:36.460
we've got a bunch of, things. Notice that

00:05:36.460 --> 00:05:40.380
we have the hello program. Okay, this is

00:05:40.380 --> 00:05:41.980
just a program that I wrote that says

00:05:41.980 --> 00:05:45.420
hello world and because it has the x

00:05:45.005 --> 00:05:46.845
before it had an asterisk, but because it

00:05:46.845 --> 00:05:48.605
has an x on here, it means that

00:05:48.605 --> 00:05:50.445
we can execute it and it's a runnable

00:05:50.445 --> 00:05:53.565
app and instead of just saying hello, which

00:05:53.565 --> 00:05:56.205
will say, the program hello cannot be found,

00:05:57.020 --> 00:05:59.340
then you could have them try to install

00:05:59.340 --> 00:06:01.820
it, but it's not currently installed. But we

00:06:01.820 --> 00:06:03.340
have a hello here. Well, how do you

00:06:03.340 --> 00:06:06.860
actually run that? You type dot slash hello,

00:06:06.860 --> 00:06:10.405
and that says run the hello program in

00:06:10.405 --> 00:06:12.805
my current directory and that you will use

00:06:12.805 --> 00:06:15.205
this command a billion times in c s

00:06:15.205 --> 00:06:17.525
one zero seven. Anyway, you run dot slash

00:06:17.525 --> 00:06:19.605
hello and it says okay, I know exactly

00:06:19.605 --> 00:06:20.805
where that file is and that's the one

00:06:20.805 --> 00:06:24.750
I'm going to run. And in the, video

00:06:24.750 --> 00:06:29.150
on paths, you can, see how to actually

00:06:29.150 --> 00:06:31.550
modify things so that your path is is,

00:06:33.230 --> 00:06:35.310
where it can find certain files a little

00:06:35.310 --> 00:06:36.590
bit easier if you if you really want

00:06:36.590 --> 00:06:38.925
to. But anyway, the dot is just the

00:06:38.925 --> 00:06:40.685
ls dot would be the same as just

00:06:40.685 --> 00:06:42.605
saying ls because it's the same directory but

00:06:42.605 --> 00:06:43.965
it gives you a way to refer to

00:06:43.965 --> 00:06:49.637
your own directory explicitly. So that's that. That's

00:06:49.637 --> 00:06:53.157
the file system is a tree and you

00:06:53.157 --> 00:06:56.117
will become very familiar with that tree as

00:06:56.117 --> 00:06:58.277
you go through CS107. Thanks.
