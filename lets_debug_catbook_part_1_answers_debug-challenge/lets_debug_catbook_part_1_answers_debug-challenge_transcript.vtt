WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 5a72e8f9-dbf0-4abe-8e16-288dab3dcb66
Created: 2025-05-15T20:36:57.258Z
Duration: 1309.2048
Channels: 1

00:00:05.440 --> 00:00:09.280
Everyone. So we're going to attack the Catbook

00:00:09.280 --> 00:00:13.735
debugging challenge, step one. So before we get

00:00:13.735 --> 00:00:16.775
into it, I'm going to git checkout. Well,

00:00:16.775 --> 00:00:20.615
I'll git reset just to make sure that

00:00:20.615 --> 00:00:22.935
I don't have anything there because I don't

00:00:22.935 --> 00:00:25.575
need anything. And then I'll git checkout debug

00:00:25.575 --> 00:00:34.390
challenge. Alright. I'll make sure that NPM start

00:00:34.390 --> 00:00:39.430
and NPM run dev are running properly. And

00:00:39.430 --> 00:00:41.910
now before we do anything, let's just see

00:00:41.910 --> 00:00:46.895
what's going on in oh, Catbook. Okay. What

00:00:46.895 --> 00:00:49.295
does this error say? It says let cannot

00:00:49.295 --> 00:00:51.535
be used as an identifier in strict mode.

00:00:51.775 --> 00:00:53.455
I don't know what the heck that means.

00:00:54.575 --> 00:00:55.775
I don't know what the heck this means

00:00:55.775 --> 00:00:59.730
either, but I do recognize okay. Syntax error

00:00:59.970 --> 00:01:03.970
in the feed dot JSX file, so I'm

00:01:03.970 --> 00:01:06.770
gonna click on that. Or rather, I guess

00:01:06.770 --> 00:01:09.170
I'll just go here. Feed dot JSX. Oh,

00:01:09.170 --> 00:01:10.370
and I get a red thing from my

00:01:10.370 --> 00:01:14.215
Versus code saying reverse story objects, comma, expected.

00:01:14.615 --> 00:01:17.175
I don't know what that means, but I

00:01:17.175 --> 00:01:19.895
do know that in a dot then, the

00:01:19.895 --> 00:01:21.575
argument to a dot then is a callback

00:01:21.575 --> 00:01:25.335
function. This right here is not a function

00:01:25.335 --> 00:01:30.580
definition. A function definition has parentheses where you

00:01:30.580 --> 00:01:33.140
put in the input, and then an arrow,

00:01:33.300 --> 00:01:35.380
and then curly braces to denote the body

00:01:35.380 --> 00:01:39.220
of the function. So there. That's one thing

00:01:39.220 --> 00:01:44.635
fixed. But then notice how here we're using

00:01:44.635 --> 00:01:48.875
this thing called stories response. So probably that

00:01:48.875 --> 00:01:51.195
would be un that wouldn't be defined unless

00:01:51.195 --> 00:01:55.500
we defined it here. I'm assuming that's going

00:01:55.500 --> 00:01:57.420
to be an input to my callback function.

00:01:58.700 --> 00:02:02.060
Now what does stories response actually represent? Well,

00:02:02.060 --> 00:02:04.540
in this case, we do a GET request

00:02:04.540 --> 00:02:09.605
to slash API slash stories, and then we

00:02:09.605 --> 00:02:13.285
take whatever we got, which is stories response,

00:02:13.285 --> 00:02:15.125
and that gets fed into this callback function

00:02:15.125 --> 00:02:18.805
as stories response. So then that's a list

00:02:18.805 --> 00:02:20.565
of all these different stories, so we just

00:02:20.565 --> 00:02:23.285
reverse that list and then set that, reacts

00:02:23.445 --> 00:02:26.780
set our react state to the output of

00:02:26.780 --> 00:02:29.260
that or to the reverse list of stories

00:02:29.260 --> 00:02:31.740
that we got back from our git endpoint.

00:02:32.140 --> 00:02:35.100
So let's see if that works. We'll refresh

00:02:35.100 --> 00:02:38.700
the page. Oops. Need to make sure I

00:02:38.700 --> 00:02:42.315
save my file. Oh, four zero four not

00:02:42.315 --> 00:02:47.035
found. Phenomenal. So in this case, since the

00:02:47.035 --> 00:02:49.195
error is on the browser side, it might

00:02:49.195 --> 00:02:51.275
be that I always like to check the

00:02:51.275 --> 00:02:55.360
browser console first. So let's see. Oh, reference

00:02:55.360 --> 00:02:57.920
error props is not defined at single story.

00:02:57.920 --> 00:03:00.240
So let's go to single story dot JSX.

00:03:04.400 --> 00:03:09.355
And, ah, here, we're using props.creator name and

00:03:09.355 --> 00:03:12.875
props.content. Clearly, this single story component is supposed

00:03:12.875 --> 00:03:15.035
to take in props, but right now, we

00:03:15.035 --> 00:03:16.555
are not taking that as an input to

00:03:16.555 --> 00:03:18.795
our function. Remember that a React component is

00:03:18.795 --> 00:03:23.020
just a function that takes in props or

00:03:23.020 --> 00:03:25.980
takes in some kind of information and then

00:03:25.980 --> 00:03:30.060
spits out HTML or more specifically JSX, which

00:03:30.060 --> 00:03:33.180
is basically, like, a React version of HTML

00:03:34.515 --> 00:03:36.355
based on those props. So we need to

00:03:36.355 --> 00:03:39.955
take in the props as an input. Alright.

00:03:39.955 --> 00:03:41.315
Let's go back and see if we fix

00:03:41.315 --> 00:03:46.275
things. Okay. That's promising. This looks a little

00:03:46.275 --> 00:03:48.435
bit better than before, but, oh, in my

00:03:48.435 --> 00:03:52.520
console, I have these errors. Get something not

00:03:52.520 --> 00:03:56.680
found. Okay. That's odd. And it has says

00:03:56.680 --> 00:03:58.920
here, it's slash API slash comments, and here

00:03:58.920 --> 00:04:01.080
I'll notice that I can't see the comments.

00:04:01.080 --> 00:04:03.640
So, clearly, there's some issue with the GET

00:04:03.640 --> 00:04:07.615
request that allows us to actually get and

00:04:07.615 --> 00:04:11.135
display our comments. And if I wanna look

00:04:11.135 --> 00:04:13.455
into more detail as to what these requests

00:04:13.455 --> 00:04:16.815
actually are, I can go to the network

00:04:16.815 --> 00:04:22.510
tab and see where ah, so I get

00:04:22.510 --> 00:04:24.510
this error in the response that says root

00:04:24.510 --> 00:04:28.750
not found. And then the request URL, it

00:04:28.750 --> 00:04:32.315
says localhost slash API slash comments parent ID

00:04:32.315 --> 00:04:36.075
equals three. Well, that's odd because, typically, when

00:04:36.075 --> 00:04:38.075
we send a GET request, there use there

00:04:38.075 --> 00:04:40.955
has to be a question mark that separates

00:04:41.035 --> 00:04:45.195
the, the URL that we're requesting from the

00:04:45.195 --> 00:04:47.910
query parameters. And here, there's no question mark

00:04:47.910 --> 00:04:51.270
between comments and parent. So that's probably where

00:04:51.270 --> 00:04:52.630
the error is coming from, but we don't

00:04:52.630 --> 00:04:56.790
know where exactly that question mark is, like,

00:04:56.790 --> 00:05:00.845
coming where where that should go. So here,

00:05:01.965 --> 00:05:05.885
let's look at where this comment's, GET request

00:05:05.885 --> 00:05:09.165
is being sent. I could search around to

00:05:09.165 --> 00:05:10.365
find it, but I know off the top

00:05:10.365 --> 00:05:11.965
of my head that that's in card. I'm

00:05:11.965 --> 00:05:15.120
gonna open up card. By the way, if

00:05:15.120 --> 00:05:16.240
you wanna search for a file, you could

00:05:16.240 --> 00:05:17.840
just do control or I'm guessing on Mac

00:05:17.840 --> 00:05:19.600
command and p and then type in the

00:05:19.600 --> 00:05:23.920
name of the file. Alright. So I'm gonna

00:05:23.920 --> 00:05:26.320
look at where this GET request is being

00:05:26.320 --> 00:05:29.625
made. Here, I use the built in GET

00:05:29.625 --> 00:05:32.105
function or the the WebLab staff provided GET

00:05:32.105 --> 00:05:35.945
function to get slash API slash comments with

00:05:35.945 --> 00:05:39.625
this parent. It seems like here is not

00:05:39.625 --> 00:05:42.105
where we're actually constructing and putting together the

00:05:42.105 --> 00:05:45.090
URL for the GET request. It seems like

00:05:45.090 --> 00:05:49.010
that logic has been compartmentalized into this GET

00:05:49.010 --> 00:05:51.250
function. So let's go to where that's defined.

00:05:51.810 --> 00:05:53.490
I'll right click on that and go to

00:05:53.490 --> 00:05:55.570
go to definition, and it takes me to

00:05:55.570 --> 00:06:00.145
utilities.js. Ah, here it is. We do const

00:06:00.145 --> 00:06:03.825
full path, which is just the full, like,

00:06:04.465 --> 00:06:06.225
thing that you might put in a URL

00:06:06.225 --> 00:06:10.145
bar, like, the full URL, basically, is the

00:06:10.145 --> 00:06:13.860
endpoint, which in this case, when we called

00:06:13.860 --> 00:06:17.460
get was slash API slash comments. So a

00:06:17.460 --> 00:06:20.660
slash API slash comments plus the parameters that

00:06:20.660 --> 00:06:22.100
we passed in, which in this case is

00:06:22.100 --> 00:06:25.865
parentprops.ID. It seems like we're supposed to have

00:06:25.865 --> 00:06:27.945
a question mark, but we don't have one,

00:06:27.945 --> 00:06:31.785
between the endpoint and the parameters, so I'm

00:06:31.785 --> 00:06:39.440
just gonna add that. And now let's see

00:06:39.440 --> 00:06:43.440
what happens. Let's refresh the page. Ah, it

00:06:43.440 --> 00:06:45.600
works. And so now you'll notice in the

00:06:45.600 --> 00:06:49.920
network tab that these comments are made to

00:06:49.920 --> 00:06:53.040
the correct URL. Now they're being made to

00:06:53.655 --> 00:06:58.695
our localhost slash API slash comments and then

00:06:58.695 --> 00:07:03.255
the question mark and then parent and then

00:07:03.255 --> 00:07:07.520
our query parameters afterwards. Great. Now we can

00:07:07.840 --> 00:07:12.640
correctly view our comments. Alright. Let's test things

00:07:12.640 --> 00:07:14.720
out and see if there are any other

00:07:15.920 --> 00:07:17.760
bugs that we might be able to find.

00:07:20.295 --> 00:07:22.935
Oh, well, one bug here is that typically

00:07:22.935 --> 00:07:25.415
we're supposed to display whoever wrote the story,

00:07:25.415 --> 00:07:28.295
but right now, these are just blank. So

00:07:28.775 --> 00:07:31.630
I'm not getting any errors or anything, but

00:07:31.630 --> 00:07:33.950
it seems like something is not displaying that

00:07:33.950 --> 00:07:36.510
should be displaying. So let's look at where

00:07:36.510 --> 00:07:39.710
that might be coming from. I'm just gonna

00:07:39.710 --> 00:07:43.230
pull up real quick to reference the React

00:07:43.230 --> 00:07:49.635
componentry. It seems like okay. In feed, there's

00:07:49.875 --> 00:07:53.715
card and then a single story. I'm guessing

00:07:53.715 --> 00:07:59.550
single story or maybe card is where the

00:07:59.790 --> 00:08:02.750
creator is supposed to be displayed. So let's

00:08:02.750 --> 00:08:05.230
check both of those and see where the

00:08:05.230 --> 00:08:11.470
issue might be. So let's go into single

00:08:11.470 --> 00:08:18.635
story. Ah, here, single story is the one

00:08:18.635 --> 00:08:22.395
displaying the creator name. Here, and it's passed

00:08:22.395 --> 00:08:25.115
into single story as a prop. Well, it

00:08:25.115 --> 00:08:27.195
seems like there's no problem with single story

00:08:27.195 --> 00:08:30.380
just taking the prop called, taking the prop

00:08:30.380 --> 00:08:35.580
and displaying it. So let's see where single

00:08:35.580 --> 00:08:38.620
story is where where we're actually, like, creating

00:08:38.620 --> 00:08:40.860
a single story component. What's the parent of

00:08:40.860 --> 00:08:43.420
the single story component? If we look at

00:08:43.420 --> 00:08:47.765
our React component tree again, then we notice

00:08:47.765 --> 00:08:50.085
that the parent of single story is card.

00:08:51.285 --> 00:08:53.605
What does that mean? Well, that means that

00:08:54.885 --> 00:09:03.820
card has this single story component defined within

00:09:03.820 --> 00:09:06.620
it. So remember that a parent and child

00:09:06.620 --> 00:09:10.700
relationship in React is just a it just

00:09:10.700 --> 00:09:13.340
means that there is a component inside of

00:09:12.795 --> 00:09:14.555
another component. So here, there's a single store

00:09:14.555 --> 00:09:17.915
component inside of a card component right here.

00:09:18.075 --> 00:09:19.675
And that's what it means, that single store

00:09:19.675 --> 00:09:22.875
is a child of card. Okay. So here

00:09:22.875 --> 00:09:27.250
in card, we're passing in an ID, which

00:09:27.250 --> 00:09:30.130
looks like the same as what SingleStory expects.

00:09:30.530 --> 00:09:32.370
And then we're passing in a prop called

00:09:32.370 --> 00:09:35.570
creator with the prop creator name that card

00:09:35.570 --> 00:09:39.905
received from its parent. But that's kind of

00:09:39.905 --> 00:09:43.665
odd because here, it names in in card

00:09:43.665 --> 00:09:45.985
when we're passing this prop into single story.

00:09:45.985 --> 00:09:49.345
We're naming it creator. Whereas here, it looks

00:09:49.345 --> 00:09:54.000
like single story expects the prop to have

00:09:54.160 --> 00:10:00.080
an attribute called creator name. So this disconnect

00:10:00.160 --> 00:10:02.800
is what creates the problem, and so we

00:10:02.800 --> 00:10:04.560
just need to make sure that creator that

00:10:04.560 --> 00:10:06.915
the this is named the exact same thing

00:10:06.915 --> 00:10:08.995
when it's being passed into the single story

00:10:08.995 --> 00:10:12.675
component as when the single story component is

00:10:12.675 --> 00:10:17.795
receiving and using that prop. Alright. Let's see

00:10:17.795 --> 00:10:24.260
if it renders properly now. Cool. Now I

00:10:24.260 --> 00:10:26.580
can see who wrote all of my stories.

00:10:31.780 --> 00:10:37.605
Alright. And then let's try posting a story.

00:10:39.365 --> 00:10:41.525
That works fine if I refresh the page.

00:10:41.525 --> 00:10:46.005
Let's try posting a comment. And if I

00:10:46.005 --> 00:10:48.980
refr oh, what happened there? If I refresh

00:10:48.980 --> 00:10:52.020
the page, my comment is gone. That's odd.

00:10:53.300 --> 00:10:56.980
So what does that mean? Well, since I

00:10:56.980 --> 00:11:00.980
type in a comment here and it displays

00:11:00.980 --> 00:11:03.255
properly on the front end, that means that

00:11:03.255 --> 00:11:04.775
the front end knows the comment that I

00:11:04.775 --> 00:11:06.615
typed. So there's no issue with me, like,

00:11:06.615 --> 00:11:09.335
typing stuff in and then hitting the submit

00:11:09.335 --> 00:11:14.375
button. It's some issue with how that information

00:11:14.790 --> 00:11:17.110
is getting sent to the back end, or

00:11:17.110 --> 00:11:19.110
maybe how the information is getting stored in

00:11:19.110 --> 00:11:22.310
the back end, some lack of getting sent

00:11:22.310 --> 00:11:26.470
properly or getting stored properly. So this will

00:11:26.470 --> 00:11:30.630
require us to trace the whole line of

00:11:31.365 --> 00:11:33.685
where of how this comment gets sent to

00:11:33.685 --> 00:11:41.285
the back end. Okay. So I know that

00:11:41.285 --> 00:11:45.700
when I type in the comment and then

00:11:45.700 --> 00:11:48.180
hit the submit button, that's in the new

00:11:48.180 --> 00:11:51.140
comment component. So I'll start my search there.

00:11:51.220 --> 00:11:54.500
Let's go to new comment. Oh, that will

00:11:54.500 --> 00:11:57.380
be a new post input.JSX. And then here,

00:11:57.380 --> 00:12:02.795
I've defined my new comment component. Okay. So

00:12:04.155 --> 00:12:07.995
here, I have a new post input with

00:12:07.995 --> 00:12:10.075
this on submit, and then I pass in

00:12:10.075 --> 00:12:13.550
a function called add comment. And what happens

00:12:13.550 --> 00:12:15.790
with new post input is new post input

00:12:15.790 --> 00:12:17.950
takes in that prop, the on submit for

00:12:17.950 --> 00:12:23.470
new comment. And then it says the on

00:12:23.470 --> 00:12:25.150
submit should be a function that's triggered when

00:12:25.150 --> 00:12:29.315
the post is submitted. So, basically, as soon

00:12:29.315 --> 00:12:30.675
as I hit the submit button, I know

00:12:30.675 --> 00:12:32.195
that the punct function that I pass into

00:12:32.195 --> 00:12:33.795
the on submit for a new post input

00:12:33.795 --> 00:12:35.955
will be called. So the function that's called

00:12:35.955 --> 00:12:37.795
in the case of a new comment is

00:12:37.795 --> 00:12:39.955
this add comment function, which is defined right

00:12:39.955 --> 00:12:41.920
here. So what I have in here is

00:12:41.920 --> 00:12:43.440
exactly what I want to happen when I

00:12:43.440 --> 00:12:46.400
hit the submit button, in the in the

00:12:46.400 --> 00:12:53.920
comment typey thing. Well, that's reasonable enough. But

00:12:54.240 --> 00:13:05.085
then here's something interesting. The add new comment

00:13:06.365 --> 00:13:09.530
function is calling there sorry. This add comment

00:13:09.530 --> 00:13:14.490
function is calling this add new comment function

00:13:14.490 --> 00:13:16.810
that was passed into new comment as a

00:13:16.810 --> 00:13:19.610
prop. Well, that's kind of odd. What is

00:13:19.610 --> 00:13:22.805
that doing? And that to to figure out

00:13:22.805 --> 00:13:24.005
where that is, we need to figure out

00:13:24.005 --> 00:13:27.125
what the parent of new comment is. So

00:13:27.125 --> 00:13:29.285
here, I'm gonna just take a look at

00:13:29.285 --> 00:13:32.565
my nifty component tree again, and notice that

00:13:32.565 --> 00:13:36.650
here, new comment is a child of comments

00:13:36.650 --> 00:13:40.570
block. Okay. So let's look at comments block

00:13:40.570 --> 00:13:46.170
and see what's going on there. Just going

00:13:46.170 --> 00:13:55.745
to here. Comments block. Just as we expected,

00:13:55.745 --> 00:14:01.745
comments block imports new comments. That's promising. And

00:14:01.745 --> 00:14:06.610
here, it looks like oh, here inside comments

00:14:06.610 --> 00:14:09.090
block where we have a new comment component.

00:14:09.970 --> 00:14:13.410
But here, it looks like we're just passing

00:14:13.410 --> 00:14:16.210
down in for the add new comment prop,

00:14:16.965 --> 00:14:19.925
passing down whatever we receive from comments the

00:14:19.925 --> 00:14:24.245
parent of comments block. So here, there's an

00:14:24.245 --> 00:14:28.005
identical prop, add new comment, that we're passing

00:14:28.165 --> 00:14:31.125
basically through comments block from whatever just above

00:14:31.125 --> 00:14:35.100
comments block. So let's look at our component

00:14:35.100 --> 00:14:38.780
tree again. Oh, it looks like new comment

00:14:38.780 --> 00:14:40.140
is the child of comments block, which is

00:14:40.140 --> 00:14:42.460
child of card. So let's go to look

00:14:42.460 --> 00:14:44.620
at card because it looks like the add

00:14:44.620 --> 00:14:48.105
new comment function might have been originally passed

00:14:48.105 --> 00:14:50.665
down to card and then to comments block

00:14:50.665 --> 00:14:57.465
and then to new comment. If we open

00:14:57.465 --> 00:15:03.210
up card.JSX, card is the parent of comments

00:15:03.210 --> 00:15:07.050
block. Oh, this looks promising. And add new

00:15:07.050 --> 00:15:08.810
comment function. Let's just make sure that this

00:15:08.810 --> 00:15:10.890
is exactly what we think it is. Okay.

00:15:11.210 --> 00:15:13.370
So here inside card, there's a comments block

00:15:13.370 --> 00:15:15.610
because comments block is the child of card.

00:15:17.745 --> 00:15:20.065
As we can see, comments block is below

00:15:20.065 --> 00:15:27.585
card in our component tree. And that is

00:15:27.585 --> 00:15:31.265
passing in this add new comment function, which

00:15:30.690 --> 00:15:34.690
is defined right up here in card. Okay.

00:15:34.690 --> 00:15:36.210
So now we can figure out finally what

00:15:36.210 --> 00:15:38.050
this does, what add new comment is actually

00:15:38.050 --> 00:15:42.210
doing. Ah, here, it's just sending a post

00:15:42.210 --> 00:15:46.725
request to slash API slash comment with whatever

00:15:46.725 --> 00:15:49.925
it receives as an input to this function.

00:15:51.285 --> 00:15:53.125
Okay. So this is a function that takes

00:15:53.125 --> 00:15:54.485
in some kind of input and just sends

00:15:54.485 --> 00:15:57.365
that input directly as the body of a

00:15:57.365 --> 00:16:04.830
post request to the back end. Alright. Interesting.

00:16:04.990 --> 00:16:07.870
So when does we when do we call

00:16:07.870 --> 00:16:12.110
this add new comment function? Well, in new

00:16:12.110 --> 00:16:14.925
post input, we saw earlier that this is

00:16:14.925 --> 00:16:17.885
the place where the add new comment function

00:16:17.885 --> 00:16:20.605
is called. So this add new comment function

00:16:20.605 --> 00:16:23.325
is defined in card, gets passed down through

00:16:23.325 --> 00:16:25.805
comments block, and then to new comment, which

00:16:25.805 --> 00:16:28.365
is this component here. And then in new

00:16:28.365 --> 00:16:36.110
comment, it calls this function with, this whole

00:16:36.110 --> 00:16:39.070
representation of a comment in j in as

00:16:39.070 --> 00:16:43.905
a JavaScript object as the input. So we

00:16:43.905 --> 00:16:45.505
call this function, and what that's going to

00:16:45.505 --> 00:16:47.665
do is it's going to call the function

00:16:47.665 --> 00:16:52.385
that was defined here with all of this

00:16:53.025 --> 00:16:56.870
as the input, and then it's going to

00:16:56.870 --> 00:16:59.030
pass that into the post request in the

00:16:59.030 --> 00:17:01.190
back end. So, eventually, what gets sent to

00:17:01.190 --> 00:17:03.750
the back end is this stuff right here

00:17:03.750 --> 00:17:09.205
that I have highlighted. So now we just

00:17:09.205 --> 00:17:11.285
need to make sure that what we have

00:17:11.925 --> 00:17:13.605
what we're sending to the back end here

00:17:13.605 --> 00:17:15.525
is what we want to be sending to

00:17:15.525 --> 00:17:16.725
the back end and what the back end

00:17:16.725 --> 00:17:21.810
expects to be receiving. So I'm gonna get

00:17:21.810 --> 00:17:23.730
rid of you guys for the time being

00:17:23.730 --> 00:17:26.370
so we can just compare this, and I'll

00:17:26.370 --> 00:17:27.890
just reformat it a bit so it's a

00:17:27.890 --> 00:17:31.330
little easier to read, is what the back

00:17:31.330 --> 00:17:35.915
end expects to be receiving. So our back

00:17:35.915 --> 00:17:39.355
end is defined in API.js, and we'll split

00:17:39.355 --> 00:17:44.315
screen that. And this is the post comment

00:17:44.315 --> 00:17:47.595
endpoint that's going to be receiving this as

00:17:47.595 --> 00:17:59.210
its body. Okay. So here we have it

00:17:59.210 --> 00:18:02.010
just takes in the the body, which is

00:18:02.010 --> 00:18:06.015
this comment, which is this thing, and then

00:18:06.015 --> 00:18:08.735
adds it to our list of comments, and

00:18:08.735 --> 00:18:11.215
then sends it back to the front end.

00:18:12.015 --> 00:18:15.535
Okay. Interesting. Well, that doesn't really quite tell

00:18:15.535 --> 00:18:19.375
us what we expect the comment to look

00:18:19.375 --> 00:18:34.825
like. But here's I suppose okay. One thing

00:18:34.825 --> 00:18:37.705
I could do is to is if I'm

00:18:37.705 --> 00:18:42.905
debugging and I'm not sure what is what

00:18:42.905 --> 00:18:45.705
this back end expects. Well, one, if I'm

00:18:45.705 --> 00:18:46.905
writing a back end, this is a good

00:18:46.905 --> 00:18:49.460
reason why we have API documentation, which this

00:18:49.460 --> 00:18:53.940
API is not super well documented. So when

00:18:53.940 --> 00:18:55.700
you're making your apps, you typically wanna write

00:18:55.700 --> 00:18:58.420
up a document that tells you that tells,

00:18:58.420 --> 00:19:00.420
like, you as the developer exactly what your

00:19:00.420 --> 00:19:04.115
back end expects to receive. But for the

00:19:04.195 --> 00:19:05.715
since we don't have that yet and we're

00:19:05.715 --> 00:19:08.435
gonna add that once we do databases, I'm

00:19:08.435 --> 00:19:11.315
just gonna look at what the comments look

00:19:11.315 --> 00:19:13.555
like and just see if the format matches

00:19:13.555 --> 00:19:19.510
properly. So here I have underscore ID. That's

00:19:19.510 --> 00:19:24.070
present here. Okay. That's promising. Here I have

00:19:24.070 --> 00:19:27.910
creator underscore name with a string. Here I

00:19:27.910 --> 00:19:30.150
also have creator underscore name with a string.

00:19:30.150 --> 00:19:34.205
Okay. Here, I have parent and then some

00:19:34.205 --> 00:19:37.965
string. Oh, well, that's interesting. This says parent

00:19:37.965 --> 00:19:42.525
story instead of parent. Dang. It's a different

00:19:42.525 --> 00:19:46.120
it's a different key name. So, basically, JavaScript

00:19:46.120 --> 00:19:47.880
won't be able to understand what that is.

00:19:48.040 --> 00:19:51.160
And the reason that our bug looks the

00:19:51.160 --> 00:19:56.200
way it does, as in I can add

00:19:56.200 --> 00:19:58.200
a new comment, but then when I refresh,

00:19:58.200 --> 00:20:02.255
it's all gone, is because we're adding a

00:20:02.255 --> 00:20:04.655
comment to this that has the the field

00:20:04.655 --> 00:20:07.935
attribute parent story equal to something, not parent.

00:20:08.175 --> 00:20:10.335
But when we get the comments, remember, we're

00:20:10.335 --> 00:20:13.455
filtering out for the comments where the attribute

00:20:13.455 --> 00:20:16.440
parent is equal to the parent that we're

00:20:16.440 --> 00:20:21.640
looking for. And so if these new comments

00:20:21.640 --> 00:20:23.800
that we're adding don't actually have the attribute

00:20:23.800 --> 00:20:28.520
like parent, just parent, not parent story, then

00:20:29.035 --> 00:20:31.355
JavaScript isn't going to know what that is.

00:20:31.355 --> 00:20:33.115
And parent's gonna be like this is gonna

00:20:33.115 --> 00:20:35.515
say, like, undefined. That's not going to be

00:20:35.515 --> 00:20:38.155
equal to anything. All of our comments will

00:20:38.155 --> 00:20:43.420
just kind of be disappeared. So we just

00:20:43.420 --> 00:20:47.180
need to change this to be parent, and

00:20:47.180 --> 00:21:05.455
then, hopefully, we will be chilling. K. And

00:21:05.455 --> 00:21:09.055
we just refreshed, and it stayed there. Amazing.

00:21:12.410 --> 00:21:15.930
And this is all of the debug changes

00:21:15.930 --> 00:21:21.210
that we had for, the original debug challenge

00:21:21.210 --> 00:21:27.575
branch. This was hopefully, the video hopefully or

00:21:27.575 --> 00:21:30.295
the video went a little fast. But if

00:21:30.295 --> 00:21:32.295
you really take the time to sit down

00:21:32.295 --> 00:21:34.455
with it and make sure you understand how

00:21:34.455 --> 00:21:36.455
everything works, then I hope that it will

00:21:36.455 --> 00:21:38.615
be a good way for you to learn.

00:21:39.410 --> 00:21:39.970
Thank you.
